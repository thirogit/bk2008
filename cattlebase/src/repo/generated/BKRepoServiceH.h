/* BKRepoServiceH.h
   Generated by gSOAP 2.8.6 from BKRepoService.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef BKRepoServiceH_H
#define BKRepoServiceH_H
#include "BKRepoServiceStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 BKRepoService_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 BKRepoService_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 BKRepoService_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_begin_send(soap) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__status
#define SOAP_TYPE_ns1__status (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__status(struct soap*, enum ns1__status *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__status(struct soap*, const char*, int, const enum ns1__status *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__status2s(struct soap*, enum ns1__status);
SOAP_FMAC3 enum ns1__status * SOAP_FMAC4 soap_in_ns1__status(struct soap*, const char*, enum ns1__status *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__status(struct soap*, const char*, enum ns1__status *);

#ifndef soap_write_ns1__status
#define soap_write_ns1__status(soap, data) ( soap_begin_send(soap) || soap_put_ns1__status(soap, data, "ns1:status", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__status(struct soap*, const enum ns1__status *, const char*, const char*);

#ifndef soap_read_ns1__status
#define soap_read_ns1__status(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__status(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__status * SOAP_FMAC4 soap_get_ns1__status(struct soap*, enum ns1__status *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__invoiceType
#define SOAP_TYPE_ns1__invoiceType (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__invoiceType(struct soap*, enum ns1__invoiceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__invoiceType(struct soap*, const char*, int, const enum ns1__invoiceType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__invoiceType2s(struct soap*, enum ns1__invoiceType);
SOAP_FMAC3 enum ns1__invoiceType * SOAP_FMAC4 soap_in_ns1__invoiceType(struct soap*, const char*, enum ns1__invoiceType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__invoiceType(struct soap*, const char*, enum ns1__invoiceType *);

#ifndef soap_write_ns1__invoiceType
#define soap_write_ns1__invoiceType(soap, data) ( soap_begin_send(soap) || soap_put_ns1__invoiceType(soap, data, "ns1:invoiceType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__invoiceType(struct soap*, const enum ns1__invoiceType *, const char*, const char*);

#ifndef soap_read_ns1__invoiceType
#define soap_read_ns1__invoiceType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__invoiceType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__invoiceType * SOAP_FMAC4 soap_get_ns1__invoiceType(struct soap*, enum ns1__invoiceType *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__payWay
#define SOAP_TYPE_ns1__payWay (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__payWay(struct soap*, enum ns1__payWay *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__payWay(struct soap*, const char*, int, const enum ns1__payWay *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__payWay2s(struct soap*, enum ns1__payWay);
SOAP_FMAC3 enum ns1__payWay * SOAP_FMAC4 soap_in_ns1__payWay(struct soap*, const char*, enum ns1__payWay *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__payWay(struct soap*, const char*, enum ns1__payWay *);

#ifndef soap_write_ns1__payWay
#define soap_write_ns1__payWay(soap, data) ( soap_begin_send(soap) || soap_put_ns1__payWay(soap, data, "ns1:payWay", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__payWay(struct soap*, const enum ns1__payWay *, const char*, const char*);

#ifndef soap_read_ns1__payWay
#define soap_read_ns1__payWay(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__payWay(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__payWay * SOAP_FMAC4 soap_get_ns1__payWay(struct soap*, enum ns1__payWay *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__hentType
#define SOAP_TYPE_ns1__hentType (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__hentType(struct soap*, enum ns1__hentType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hentType(struct soap*, const char*, int, const enum ns1__hentType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__hentType2s(struct soap*, enum ns1__hentType);
SOAP_FMAC3 enum ns1__hentType * SOAP_FMAC4 soap_in_ns1__hentType(struct soap*, const char*, enum ns1__hentType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__hentType(struct soap*, const char*, enum ns1__hentType *);

#ifndef soap_write_ns1__hentType
#define soap_write_ns1__hentType(soap, data) ( soap_begin_send(soap) || soap_put_ns1__hentType(soap, data, "ns1:hentType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__hentType(struct soap*, const enum ns1__hentType *, const char*, const char*);

#ifndef soap_read_ns1__hentType
#define soap_read_ns1__hentType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hentType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__hentType * SOAP_FMAC4 soap_get_ns1__hentType(struct soap*, enum ns1__hentType *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__cowSex
#define SOAP_TYPE_ns1__cowSex (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__cowSex(struct soap*, enum ns1__cowSex *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cowSex(struct soap*, const char*, int, const enum ns1__cowSex *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__cowSex2s(struct soap*, enum ns1__cowSex);
SOAP_FMAC3 enum ns1__cowSex * SOAP_FMAC4 soap_in_ns1__cowSex(struct soap*, const char*, enum ns1__cowSex *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__cowSex(struct soap*, const char*, enum ns1__cowSex *);

#ifndef soap_write_ns1__cowSex
#define soap_write_ns1__cowSex(soap, data) ( soap_begin_send(soap) || soap_put_ns1__cowSex(soap, data, "ns1:cowSex", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__cowSex(struct soap*, const enum ns1__cowSex *, const char*, const char*);

#ifndef soap_read_ns1__cowSex
#define soap_read_ns1__cowSex(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cowSex(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__cowSex * SOAP_FMAC4 soap_get_ns1__cowSex(struct soap*, enum ns1__cowSex *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__downloadPurchaseRequest
#define SOAP_TYPE_ns1__downloadPurchaseRequest (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__downloadPurchaseRequest(struct soap*, const char*, int, const ns1__downloadPurchaseRequest *, const char*);
SOAP_FMAC3 ns1__downloadPurchaseRequest * SOAP_FMAC4 soap_in_ns1__downloadPurchaseRequest(struct soap*, const char*, ns1__downloadPurchaseRequest *, const char*);

#ifndef soap_write_ns1__downloadPurchaseRequest
#define soap_write_ns1__downloadPurchaseRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:downloadPurchaseRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__downloadPurchaseRequest
#define soap_read_ns1__downloadPurchaseRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__downloadPurchaseRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__downloadPurchaseRequest * SOAP_FMAC4 soap_get_ns1__downloadPurchaseRequest(struct soap*, ns1__downloadPurchaseRequest *, const char*, const char*);

#define soap_new_ns1__downloadPurchaseRequest(soap, n) soap_instantiate_ns1__downloadPurchaseRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__downloadPurchaseRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__downloadPurchaseRequest * SOAP_FMAC2 soap_instantiate_ns1__downloadPurchaseRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__downloadPurchaseRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__downloadPurchaseResponse
#define SOAP_TYPE_ns1__downloadPurchaseResponse (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__downloadPurchaseResponse(struct soap*, const char*, int, const ns1__downloadPurchaseResponse *, const char*);
SOAP_FMAC3 ns1__downloadPurchaseResponse * SOAP_FMAC4 soap_in_ns1__downloadPurchaseResponse(struct soap*, const char*, ns1__downloadPurchaseResponse *, const char*);

#ifndef soap_write_ns1__downloadPurchaseResponse
#define soap_write_ns1__downloadPurchaseResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:downloadPurchaseResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__downloadPurchaseResponse
#define soap_read_ns1__downloadPurchaseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__downloadPurchaseResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__downloadPurchaseResponse * SOAP_FMAC4 soap_get_ns1__downloadPurchaseResponse(struct soap*, ns1__downloadPurchaseResponse *, const char*, const char*);

#define soap_new_ns1__downloadPurchaseResponse(soap, n) soap_instantiate_ns1__downloadPurchaseResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__downloadPurchaseResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__downloadPurchaseResponse * SOAP_FMAC2 soap_instantiate_ns1__downloadPurchaseResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__downloadPurchaseResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__fetchPurchasesResponse
#define SOAP_TYPE_ns1__fetchPurchasesResponse (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__fetchPurchasesResponse(struct soap*, const char*, int, const ns1__fetchPurchasesResponse *, const char*);
SOAP_FMAC3 ns1__fetchPurchasesResponse * SOAP_FMAC4 soap_in_ns1__fetchPurchasesResponse(struct soap*, const char*, ns1__fetchPurchasesResponse *, const char*);

#ifndef soap_write_ns1__fetchPurchasesResponse
#define soap_write_ns1__fetchPurchasesResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:fetchPurchasesResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__fetchPurchasesResponse
#define soap_read_ns1__fetchPurchasesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__fetchPurchasesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchPurchasesResponse * SOAP_FMAC4 soap_get_ns1__fetchPurchasesResponse(struct soap*, ns1__fetchPurchasesResponse *, const char*, const char*);

#define soap_new_ns1__fetchPurchasesResponse(soap, n) soap_instantiate_ns1__fetchPurchasesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__fetchPurchasesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__fetchPurchasesResponse * SOAP_FMAC2 soap_instantiate_ns1__fetchPurchasesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__fetchPurchasesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closePurchaseCursorResponse
#define SOAP_TYPE_ns1__closePurchaseCursorResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closePurchaseCursorResponse(struct soap*, const char*, int, const ns1__closePurchaseCursorResponse *, const char*);
SOAP_FMAC3 ns1__closePurchaseCursorResponse * SOAP_FMAC4 soap_in_ns1__closePurchaseCursorResponse(struct soap*, const char*, ns1__closePurchaseCursorResponse *, const char*);

#ifndef soap_write_ns1__closePurchaseCursorResponse
#define soap_write_ns1__closePurchaseCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closePurchaseCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closePurchaseCursorResponse
#define soap_read_ns1__closePurchaseCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closePurchaseCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closePurchaseCursorResponse * SOAP_FMAC4 soap_get_ns1__closePurchaseCursorResponse(struct soap*, ns1__closePurchaseCursorResponse *, const char*, const char*);

#define soap_new_ns1__closePurchaseCursorResponse(soap, n) soap_instantiate_ns1__closePurchaseCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closePurchaseCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closePurchaseCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__closePurchaseCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closePurchaseCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openPurchaseCursorResponse
#define SOAP_TYPE_ns1__openPurchaseCursorResponse (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openPurchaseCursorResponse(struct soap*, const char*, int, const ns1__openPurchaseCursorResponse *, const char*);
SOAP_FMAC3 ns1__openPurchaseCursorResponse * SOAP_FMAC4 soap_in_ns1__openPurchaseCursorResponse(struct soap*, const char*, ns1__openPurchaseCursorResponse *, const char*);

#ifndef soap_write_ns1__openPurchaseCursorResponse
#define soap_write_ns1__openPurchaseCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openPurchaseCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openPurchaseCursorResponse
#define soap_read_ns1__openPurchaseCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openPurchaseCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openPurchaseCursorResponse * SOAP_FMAC4 soap_get_ns1__openPurchaseCursorResponse(struct soap*, ns1__openPurchaseCursorResponse *, const char*, const char*);

#define soap_new_ns1__openPurchaseCursorResponse(soap, n) soap_instantiate_ns1__openPurchaseCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openPurchaseCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openPurchaseCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__openPurchaseCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openPurchaseCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__uploadPurchaseResponse
#define SOAP_TYPE_ns1__uploadPurchaseResponse (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__uploadPurchaseResponse(struct soap*, const char*, int, const ns1__uploadPurchaseResponse *, const char*);
SOAP_FMAC3 ns1__uploadPurchaseResponse * SOAP_FMAC4 soap_in_ns1__uploadPurchaseResponse(struct soap*, const char*, ns1__uploadPurchaseResponse *, const char*);

#ifndef soap_write_ns1__uploadPurchaseResponse
#define soap_write_ns1__uploadPurchaseResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:uploadPurchaseResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__uploadPurchaseResponse
#define soap_read_ns1__uploadPurchaseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__uploadPurchaseResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__uploadPurchaseResponse * SOAP_FMAC4 soap_get_ns1__uploadPurchaseResponse(struct soap*, ns1__uploadPurchaseResponse *, const char*, const char*);

#define soap_new_ns1__uploadPurchaseResponse(soap, n) soap_instantiate_ns1__uploadPurchaseResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__uploadPurchaseResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__uploadPurchaseResponse * SOAP_FMAC2 soap_instantiate_ns1__uploadPurchaseResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__uploadPurchaseResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__uploadPurchaseRequest
#define SOAP_TYPE_ns1__uploadPurchaseRequest (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__uploadPurchaseRequest(struct soap*, const char*, int, const ns1__uploadPurchaseRequest *, const char*);
SOAP_FMAC3 ns1__uploadPurchaseRequest * SOAP_FMAC4 soap_in_ns1__uploadPurchaseRequest(struct soap*, const char*, ns1__uploadPurchaseRequest *, const char*);

#ifndef soap_write_ns1__uploadPurchaseRequest
#define soap_write_ns1__uploadPurchaseRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:uploadPurchaseRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__uploadPurchaseRequest
#define soap_read_ns1__uploadPurchaseRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__uploadPurchaseRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__uploadPurchaseRequest * SOAP_FMAC4 soap_get_ns1__uploadPurchaseRequest(struct soap*, ns1__uploadPurchaseRequest *, const char*, const char*);

#define soap_new_ns1__uploadPurchaseRequest(soap, n) soap_instantiate_ns1__uploadPurchaseRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__uploadPurchaseRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__uploadPurchaseRequest * SOAP_FMAC2 soap_instantiate_ns1__uploadPurchaseRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__uploadPurchaseRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__fetchCompanyResponse
#define SOAP_TYPE_ns1__fetchCompanyResponse (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__fetchCompanyResponse(struct soap*, const char*, int, const ns1__fetchCompanyResponse *, const char*);
SOAP_FMAC3 ns1__fetchCompanyResponse * SOAP_FMAC4 soap_in_ns1__fetchCompanyResponse(struct soap*, const char*, ns1__fetchCompanyResponse *, const char*);

#ifndef soap_write_ns1__fetchCompanyResponse
#define soap_write_ns1__fetchCompanyResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:fetchCompanyResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__fetchCompanyResponse
#define soap_read_ns1__fetchCompanyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__fetchCompanyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchCompanyResponse * SOAP_FMAC4 soap_get_ns1__fetchCompanyResponse(struct soap*, ns1__fetchCompanyResponse *, const char*, const char*);

#define soap_new_ns1__fetchCompanyResponse(soap, n) soap_instantiate_ns1__fetchCompanyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__fetchCompanyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__fetchCompanyResponse * SOAP_FMAC2 soap_instantiate_ns1__fetchCompanyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__fetchCompanyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateCompanyRequest
#define SOAP_TYPE_ns1__updateCompanyRequest (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateCompanyRequest(struct soap*, const char*, int, const ns1__updateCompanyRequest *, const char*);
SOAP_FMAC3 ns1__updateCompanyRequest * SOAP_FMAC4 soap_in_ns1__updateCompanyRequest(struct soap*, const char*, ns1__updateCompanyRequest *, const char*);

#ifndef soap_write_ns1__updateCompanyRequest
#define soap_write_ns1__updateCompanyRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateCompanyRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateCompanyRequest
#define soap_read_ns1__updateCompanyRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateCompanyRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateCompanyRequest * SOAP_FMAC4 soap_get_ns1__updateCompanyRequest(struct soap*, ns1__updateCompanyRequest *, const char*, const char*);

#define soap_new_ns1__updateCompanyRequest(soap, n) soap_instantiate_ns1__updateCompanyRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateCompanyRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateCompanyRequest * SOAP_FMAC2 soap_instantiate_ns1__updateCompanyRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateCompanyRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateCompanyResponse
#define SOAP_TYPE_ns1__updateCompanyResponse (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateCompanyResponse(struct soap*, const char*, int, const ns1__updateCompanyResponse *, const char*);
SOAP_FMAC3 ns1__updateCompanyResponse * SOAP_FMAC4 soap_in_ns1__updateCompanyResponse(struct soap*, const char*, ns1__updateCompanyResponse *, const char*);

#ifndef soap_write_ns1__updateCompanyResponse
#define soap_write_ns1__updateCompanyResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateCompanyResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateCompanyResponse
#define soap_read_ns1__updateCompanyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateCompanyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateCompanyResponse * SOAP_FMAC4 soap_get_ns1__updateCompanyResponse(struct soap*, ns1__updateCompanyResponse *, const char*, const char*);

#define soap_new_ns1__updateCompanyResponse(soap, n) soap_instantiate_ns1__updateCompanyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateCompanyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateCompanyResponse * SOAP_FMAC2 soap_instantiate_ns1__updateCompanyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateCompanyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__fetchStocksResponse
#define SOAP_TYPE_ns1__fetchStocksResponse (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__fetchStocksResponse(struct soap*, const char*, int, const ns1__fetchStocksResponse *, const char*);
SOAP_FMAC3 ns1__fetchStocksResponse * SOAP_FMAC4 soap_in_ns1__fetchStocksResponse(struct soap*, const char*, ns1__fetchStocksResponse *, const char*);

#ifndef soap_write_ns1__fetchStocksResponse
#define soap_write_ns1__fetchStocksResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:fetchStocksResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__fetchStocksResponse
#define soap_read_ns1__fetchStocksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__fetchStocksResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchStocksResponse * SOAP_FMAC4 soap_get_ns1__fetchStocksResponse(struct soap*, ns1__fetchStocksResponse *, const char*, const char*);

#define soap_new_ns1__fetchStocksResponse(soap, n) soap_instantiate_ns1__fetchStocksResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__fetchStocksResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__fetchStocksResponse * SOAP_FMAC2 soap_instantiate_ns1__fetchStocksResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__fetchStocksResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closeStockCursorResponse
#define SOAP_TYPE_ns1__closeStockCursorResponse (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closeStockCursorResponse(struct soap*, const char*, int, const ns1__closeStockCursorResponse *, const char*);
SOAP_FMAC3 ns1__closeStockCursorResponse * SOAP_FMAC4 soap_in_ns1__closeStockCursorResponse(struct soap*, const char*, ns1__closeStockCursorResponse *, const char*);

#ifndef soap_write_ns1__closeStockCursorResponse
#define soap_write_ns1__closeStockCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closeStockCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closeStockCursorResponse
#define soap_read_ns1__closeStockCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closeStockCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeStockCursorResponse * SOAP_FMAC4 soap_get_ns1__closeStockCursorResponse(struct soap*, ns1__closeStockCursorResponse *, const char*, const char*);

#define soap_new_ns1__closeStockCursorResponse(soap, n) soap_instantiate_ns1__closeStockCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closeStockCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closeStockCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__closeStockCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closeStockCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openStockCursorResponse
#define SOAP_TYPE_ns1__openStockCursorResponse (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openStockCursorResponse(struct soap*, const char*, int, const ns1__openStockCursorResponse *, const char*);
SOAP_FMAC3 ns1__openStockCursorResponse * SOAP_FMAC4 soap_in_ns1__openStockCursorResponse(struct soap*, const char*, ns1__openStockCursorResponse *, const char*);

#ifndef soap_write_ns1__openStockCursorResponse
#define soap_write_ns1__openStockCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openStockCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openStockCursorResponse
#define soap_read_ns1__openStockCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openStockCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openStockCursorResponse * SOAP_FMAC4 soap_get_ns1__openStockCursorResponse(struct soap*, ns1__openStockCursorResponse *, const char*, const char*);

#define soap_new_ns1__openStockCursorResponse(soap, n) soap_instantiate_ns1__openStockCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openStockCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openStockCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__openStockCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openStockCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openHentCursorResponse
#define SOAP_TYPE_ns1__openHentCursorResponse (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openHentCursorResponse(struct soap*, const char*, int, const ns1__openHentCursorResponse *, const char*);
SOAP_FMAC3 ns1__openHentCursorResponse * SOAP_FMAC4 soap_in_ns1__openHentCursorResponse(struct soap*, const char*, ns1__openHentCursorResponse *, const char*);

#ifndef soap_write_ns1__openHentCursorResponse
#define soap_write_ns1__openHentCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openHentCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openHentCursorResponse
#define soap_read_ns1__openHentCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openHentCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openHentCursorResponse * SOAP_FMAC4 soap_get_ns1__openHentCursorResponse(struct soap*, ns1__openHentCursorResponse *, const char*, const char*);

#define soap_new_ns1__openHentCursorResponse(soap, n) soap_instantiate_ns1__openHentCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openHentCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openHentCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__openHentCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openHentCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closeHentCursorResponse
#define SOAP_TYPE_ns1__closeHentCursorResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closeHentCursorResponse(struct soap*, const char*, int, const ns1__closeHentCursorResponse *, const char*);
SOAP_FMAC3 ns1__closeHentCursorResponse * SOAP_FMAC4 soap_in_ns1__closeHentCursorResponse(struct soap*, const char*, ns1__closeHentCursorResponse *, const char*);

#ifndef soap_write_ns1__closeHentCursorResponse
#define soap_write_ns1__closeHentCursorResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closeHentCursorResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closeHentCursorResponse
#define soap_read_ns1__closeHentCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closeHentCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeHentCursorResponse * SOAP_FMAC4 soap_get_ns1__closeHentCursorResponse(struct soap*, ns1__closeHentCursorResponse *, const char*, const char*);

#define soap_new_ns1__closeHentCursorResponse(soap, n) soap_instantiate_ns1__closeHentCursorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closeHentCursorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closeHentCursorResponse * SOAP_FMAC2 soap_instantiate_ns1__closeHentCursorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closeHentCursorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openSyncTransactionResponse
#define SOAP_TYPE_ns1__openSyncTransactionResponse (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openSyncTransactionResponse(struct soap*, const char*, int, const ns1__openSyncTransactionResponse *, const char*);
SOAP_FMAC3 ns1__openSyncTransactionResponse * SOAP_FMAC4 soap_in_ns1__openSyncTransactionResponse(struct soap*, const char*, ns1__openSyncTransactionResponse *, const char*);

#ifndef soap_write_ns1__openSyncTransactionResponse
#define soap_write_ns1__openSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openSyncTransactionResponse
#define soap_read_ns1__openSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openSyncTransactionResponse * SOAP_FMAC4 soap_get_ns1__openSyncTransactionResponse(struct soap*, ns1__openSyncTransactionResponse *, const char*, const char*);

#define soap_new_ns1__openSyncTransactionResponse(soap, n) soap_instantiate_ns1__openSyncTransactionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openSyncTransactionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openSyncTransactionResponse * SOAP_FMAC2 soap_instantiate_ns1__openSyncTransactionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openSyncTransactionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closeSessionResponse
#define SOAP_TYPE_ns1__closeSessionResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closeSessionResponse(struct soap*, const char*, int, const ns1__closeSessionResponse *, const char*);
SOAP_FMAC3 ns1__closeSessionResponse * SOAP_FMAC4 soap_in_ns1__closeSessionResponse(struct soap*, const char*, ns1__closeSessionResponse *, const char*);

#ifndef soap_write_ns1__closeSessionResponse
#define soap_write_ns1__closeSessionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closeSessionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closeSessionResponse
#define soap_read_ns1__closeSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closeSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeSessionResponse * SOAP_FMAC4 soap_get_ns1__closeSessionResponse(struct soap*, ns1__closeSessionResponse *, const char*, const char*);

#define soap_new_ns1__closeSessionResponse(soap, n) soap_instantiate_ns1__closeSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closeSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closeSessionResponse * SOAP_FMAC2 soap_instantiate_ns1__closeSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closeSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__fetchHentsResponse
#define SOAP_TYPE_ns1__fetchHentsResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__fetchHentsResponse(struct soap*, const char*, int, const ns1__fetchHentsResponse *, const char*);
SOAP_FMAC3 ns1__fetchHentsResponse * SOAP_FMAC4 soap_in_ns1__fetchHentsResponse(struct soap*, const char*, ns1__fetchHentsResponse *, const char*);

#ifndef soap_write_ns1__fetchHentsResponse
#define soap_write_ns1__fetchHentsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:fetchHentsResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__fetchHentsResponse
#define soap_read_ns1__fetchHentsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__fetchHentsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchHentsResponse * SOAP_FMAC4 soap_get_ns1__fetchHentsResponse(struct soap*, ns1__fetchHentsResponse *, const char*, const char*);

#define soap_new_ns1__fetchHentsResponse(soap, n) soap_instantiate_ns1__fetchHentsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__fetchHentsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__fetchHentsResponse * SOAP_FMAC2 soap_instantiate_ns1__fetchHentsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__fetchHentsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateStockResponse
#define SOAP_TYPE_ns1__updateStockResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateStockResponse(struct soap*, const char*, int, const ns1__updateStockResponse *, const char*);
SOAP_FMAC3 ns1__updateStockResponse * SOAP_FMAC4 soap_in_ns1__updateStockResponse(struct soap*, const char*, ns1__updateStockResponse *, const char*);

#ifndef soap_write_ns1__updateStockResponse
#define soap_write_ns1__updateStockResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateStockResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateStockResponse
#define soap_read_ns1__updateStockResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateStockResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateStockResponse * SOAP_FMAC4 soap_get_ns1__updateStockResponse(struct soap*, ns1__updateStockResponse *, const char*, const char*);

#define soap_new_ns1__updateStockResponse(soap, n) soap_instantiate_ns1__updateStockResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateStockResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateStockResponse * SOAP_FMAC2 soap_instantiate_ns1__updateStockResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateStockResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateStockRequest
#define SOAP_TYPE_ns1__updateStockRequest (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateStockRequest(struct soap*, const char*, int, const ns1__updateStockRequest *, const char*);
SOAP_FMAC3 ns1__updateStockRequest * SOAP_FMAC4 soap_in_ns1__updateStockRequest(struct soap*, const char*, ns1__updateStockRequest *, const char*);

#ifndef soap_write_ns1__updateStockRequest
#define soap_write_ns1__updateStockRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateStockRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateStockRequest
#define soap_read_ns1__updateStockRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateStockRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateStockRequest * SOAP_FMAC4 soap_get_ns1__updateStockRequest(struct soap*, ns1__updateStockRequest *, const char*, const char*);

#define soap_new_ns1__updateStockRequest(soap, n) soap_instantiate_ns1__updateStockRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateStockRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateStockRequest * SOAP_FMAC2 soap_instantiate_ns1__updateStockRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateStockRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateHentResponse
#define SOAP_TYPE_ns1__updateHentResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateHentResponse(struct soap*, const char*, int, const ns1__updateHentResponse *, const char*);
SOAP_FMAC3 ns1__updateHentResponse * SOAP_FMAC4 soap_in_ns1__updateHentResponse(struct soap*, const char*, ns1__updateHentResponse *, const char*);

#ifndef soap_write_ns1__updateHentResponse
#define soap_write_ns1__updateHentResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateHentResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateHentResponse
#define soap_read_ns1__updateHentResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateHentResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateHentResponse * SOAP_FMAC4 soap_get_ns1__updateHentResponse(struct soap*, ns1__updateHentResponse *, const char*, const char*);

#define soap_new_ns1__updateHentResponse(soap, n) soap_instantiate_ns1__updateHentResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateHentResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateHentResponse * SOAP_FMAC2 soap_instantiate_ns1__updateHentResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateHentResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateHentRequest
#define SOAP_TYPE_ns1__updateHentRequest (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateHentRequest(struct soap*, const char*, int, const ns1__updateHentRequest *, const char*);
SOAP_FMAC3 ns1__updateHentRequest * SOAP_FMAC4 soap_in_ns1__updateHentRequest(struct soap*, const char*, ns1__updateHentRequest *, const char*);

#ifndef soap_write_ns1__updateHentRequest
#define soap_write_ns1__updateHentRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:updateHentRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__updateHentRequest
#define soap_read_ns1__updateHentRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateHentRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateHentRequest * SOAP_FMAC4 soap_get_ns1__updateHentRequest(struct soap*, ns1__updateHentRequest *, const char*, const char*);

#define soap_new_ns1__updateHentRequest(soap, n) soap_instantiate_ns1__updateHentRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateHentRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__updateHentRequest * SOAP_FMAC2 soap_instantiate_ns1__updateHentRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateHentRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__commitSyncTransactionResponse
#define SOAP_TYPE_ns1__commitSyncTransactionResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__commitSyncTransactionResponse(struct soap*, const char*, int, const ns1__commitSyncTransactionResponse *, const char*);
SOAP_FMAC3 ns1__commitSyncTransactionResponse * SOAP_FMAC4 soap_in_ns1__commitSyncTransactionResponse(struct soap*, const char*, ns1__commitSyncTransactionResponse *, const char*);

#ifndef soap_write_ns1__commitSyncTransactionResponse
#define soap_write_ns1__commitSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:commitSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__commitSyncTransactionResponse
#define soap_read_ns1__commitSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__commitSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__commitSyncTransactionResponse * SOAP_FMAC4 soap_get_ns1__commitSyncTransactionResponse(struct soap*, ns1__commitSyncTransactionResponse *, const char*, const char*);

#define soap_new_ns1__commitSyncTransactionResponse(soap, n) soap_instantiate_ns1__commitSyncTransactionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__commitSyncTransactionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__commitSyncTransactionResponse * SOAP_FMAC2 soap_instantiate_ns1__commitSyncTransactionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__commitSyncTransactionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__commitSyncTransactionRequest
#define SOAP_TYPE_ns1__commitSyncTransactionRequest (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__commitSyncTransactionRequest(struct soap*, const char*, int, const ns1__commitSyncTransactionRequest *, const char*);
SOAP_FMAC3 ns1__commitSyncTransactionRequest * SOAP_FMAC4 soap_in_ns1__commitSyncTransactionRequest(struct soap*, const char*, ns1__commitSyncTransactionRequest *, const char*);

#ifndef soap_write_ns1__commitSyncTransactionRequest
#define soap_write_ns1__commitSyncTransactionRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:commitSyncTransactionRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__commitSyncTransactionRequest
#define soap_read_ns1__commitSyncTransactionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__commitSyncTransactionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__commitSyncTransactionRequest * SOAP_FMAC4 soap_get_ns1__commitSyncTransactionRequest(struct soap*, ns1__commitSyncTransactionRequest *, const char*, const char*);

#define soap_new_ns1__commitSyncTransactionRequest(soap, n) soap_instantiate_ns1__commitSyncTransactionRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__commitSyncTransactionRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__commitSyncTransactionRequest * SOAP_FMAC2 soap_instantiate_ns1__commitSyncTransactionRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__commitSyncTransactionRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closeSyncTransactionResponse
#define SOAP_TYPE_ns1__closeSyncTransactionResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closeSyncTransactionResponse(struct soap*, const char*, int, const ns1__closeSyncTransactionResponse *, const char*);
SOAP_FMAC3 ns1__closeSyncTransactionResponse * SOAP_FMAC4 soap_in_ns1__closeSyncTransactionResponse(struct soap*, const char*, ns1__closeSyncTransactionResponse *, const char*);

#ifndef soap_write_ns1__closeSyncTransactionResponse
#define soap_write_ns1__closeSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closeSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closeSyncTransactionResponse
#define soap_read_ns1__closeSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closeSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeSyncTransactionResponse * SOAP_FMAC4 soap_get_ns1__closeSyncTransactionResponse(struct soap*, ns1__closeSyncTransactionResponse *, const char*, const char*);

#define soap_new_ns1__closeSyncTransactionResponse(soap, n) soap_instantiate_ns1__closeSyncTransactionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closeSyncTransactionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closeSyncTransactionResponse * SOAP_FMAC2 soap_instantiate_ns1__closeSyncTransactionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closeSyncTransactionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__closeSyncTransactionRequest
#define SOAP_TYPE_ns1__closeSyncTransactionRequest (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__closeSyncTransactionRequest(struct soap*, const char*, int, const ns1__closeSyncTransactionRequest *, const char*);
SOAP_FMAC3 ns1__closeSyncTransactionRequest * SOAP_FMAC4 soap_in_ns1__closeSyncTransactionRequest(struct soap*, const char*, ns1__closeSyncTransactionRequest *, const char*);

#ifndef soap_write_ns1__closeSyncTransactionRequest
#define soap_write_ns1__closeSyncTransactionRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:closeSyncTransactionRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__closeSyncTransactionRequest
#define soap_read_ns1__closeSyncTransactionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__closeSyncTransactionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeSyncTransactionRequest * SOAP_FMAC4 soap_get_ns1__closeSyncTransactionRequest(struct soap*, ns1__closeSyncTransactionRequest *, const char*, const char*);

#define soap_new_ns1__closeSyncTransactionRequest(soap, n) soap_instantiate_ns1__closeSyncTransactionRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__closeSyncTransactionRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__closeSyncTransactionRequest * SOAP_FMAC2 soap_instantiate_ns1__closeSyncTransactionRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__closeSyncTransactionRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cursorRequest
#define SOAP_TYPE_ns1__cursorRequest (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cursorRequest(struct soap*, const char*, int, const ns1__cursorRequest *, const char*);
SOAP_FMAC3 ns1__cursorRequest * SOAP_FMAC4 soap_in_ns1__cursorRequest(struct soap*, const char*, ns1__cursorRequest *, const char*);

#ifndef soap_write_ns1__cursorRequest
#define soap_write_ns1__cursorRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:cursorRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__cursorRequest
#define soap_read_ns1__cursorRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cursorRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__cursorRequest * SOAP_FMAC4 soap_get_ns1__cursorRequest(struct soap*, ns1__cursorRequest *, const char*, const char*);

#define soap_new_ns1__cursorRequest(soap, n) soap_instantiate_ns1__cursorRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__cursorRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__cursorRequest * SOAP_FMAC2 soap_instantiate_ns1__cursorRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cursorRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sessionRequest
#define SOAP_TYPE_ns1__sessionRequest (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sessionRequest(struct soap*, const char*, int, const ns1__sessionRequest *, const char*);
SOAP_FMAC3 ns1__sessionRequest * SOAP_FMAC4 soap_in_ns1__sessionRequest(struct soap*, const char*, ns1__sessionRequest *, const char*);

#ifndef soap_write_ns1__sessionRequest
#define soap_write_ns1__sessionRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:sessionRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__sessionRequest
#define soap_read_ns1__sessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__sessionRequest * SOAP_FMAC4 soap_get_ns1__sessionRequest(struct soap*, ns1__sessionRequest *, const char*, const char*);

#define soap_new_ns1__sessionRequest(soap, n) soap_instantiate_ns1__sessionRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__sessionRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__sessionRequest * SOAP_FMAC2 soap_instantiate_ns1__sessionRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sessionRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openSessionResponse
#define SOAP_TYPE_ns1__openSessionResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openSessionResponse(struct soap*, const char*, int, const ns1__openSessionResponse *, const char*);
SOAP_FMAC3 ns1__openSessionResponse * SOAP_FMAC4 soap_in_ns1__openSessionResponse(struct soap*, const char*, ns1__openSessionResponse *, const char*);

#ifndef soap_write_ns1__openSessionResponse
#define soap_write_ns1__openSessionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openSessionResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openSessionResponse
#define soap_read_ns1__openSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openSessionResponse * SOAP_FMAC4 soap_get_ns1__openSessionResponse(struct soap*, ns1__openSessionResponse *, const char*, const char*);

#define soap_new_ns1__openSessionResponse(soap, n) soap_instantiate_ns1__openSessionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openSessionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openSessionResponse * SOAP_FMAC2 soap_instantiate_ns1__openSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openOfficeSessionRequest
#define SOAP_TYPE_ns1__openOfficeSessionRequest (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openOfficeSessionRequest(struct soap*, const char*, int, const ns1__openOfficeSessionRequest *, const char*);
SOAP_FMAC3 ns1__openOfficeSessionRequest * SOAP_FMAC4 soap_in_ns1__openOfficeSessionRequest(struct soap*, const char*, ns1__openOfficeSessionRequest *, const char*);

#ifndef soap_write_ns1__openOfficeSessionRequest
#define soap_write_ns1__openOfficeSessionRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openOfficeSessionRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openOfficeSessionRequest
#define soap_read_ns1__openOfficeSessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openOfficeSessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openOfficeSessionRequest * SOAP_FMAC4 soap_get_ns1__openOfficeSessionRequest(struct soap*, ns1__openOfficeSessionRequest *, const char*, const char*);

#define soap_new_ns1__openOfficeSessionRequest(soap, n) soap_instantiate_ns1__openOfficeSessionRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openOfficeSessionRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openOfficeSessionRequest * SOAP_FMAC2 soap_instantiate_ns1__openOfficeSessionRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openOfficeSessionRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__openMobileSessionRequest
#define SOAP_TYPE_ns1__openMobileSessionRequest (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__openMobileSessionRequest(struct soap*, const char*, int, const ns1__openMobileSessionRequest *, const char*);
SOAP_FMAC3 ns1__openMobileSessionRequest * SOAP_FMAC4 soap_in_ns1__openMobileSessionRequest(struct soap*, const char*, ns1__openMobileSessionRequest *, const char*);

#ifndef soap_write_ns1__openMobileSessionRequest
#define soap_write_ns1__openMobileSessionRequest(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:openMobileSessionRequest", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__openMobileSessionRequest
#define soap_read_ns1__openMobileSessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__openMobileSessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openMobileSessionRequest * SOAP_FMAC4 soap_get_ns1__openMobileSessionRequest(struct soap*, ns1__openMobileSessionRequest *, const char*, const char*);

#define soap_new_ns1__openMobileSessionRequest(soap, n) soap_instantiate_ns1__openMobileSessionRequest(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__openMobileSessionRequest(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__openMobileSessionRequest * SOAP_FMAC2 soap_instantiate_ns1__openMobileSessionRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__openMobileSessionRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__result
#define SOAP_TYPE_ns1__result (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__result(struct soap*, const char*, int, const ns1__result *, const char*);
SOAP_FMAC3 ns1__result * SOAP_FMAC4 soap_in_ns1__result(struct soap*, const char*, ns1__result *, const char*);

#ifndef soap_write_ns1__result
#define soap_write_ns1__result(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:result", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__result
#define soap_read_ns1__result(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__result(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__result * SOAP_FMAC4 soap_get_ns1__result(struct soap*, ns1__result *, const char*, const char*);

#define soap_new_ns1__result(soap, n) soap_instantiate_ns1__result(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__result(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__result * SOAP_FMAC2 soap_instantiate_ns1__result(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__result(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__qualifiedPurchase
#define SOAP_TYPE_ns1__qualifiedPurchase (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__qualifiedPurchase(struct soap*, const char*, int, const ns1__qualifiedPurchase *, const char*);
SOAP_FMAC3 ns1__qualifiedPurchase * SOAP_FMAC4 soap_in_ns1__qualifiedPurchase(struct soap*, const char*, ns1__qualifiedPurchase *, const char*);

#ifndef soap_write_ns1__qualifiedPurchase
#define soap_write_ns1__qualifiedPurchase(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:qualifiedPurchase", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__qualifiedPurchase
#define soap_read_ns1__qualifiedPurchase(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__qualifiedPurchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__qualifiedPurchase * SOAP_FMAC4 soap_get_ns1__qualifiedPurchase(struct soap*, ns1__qualifiedPurchase *, const char*, const char*);

#define soap_new_ns1__qualifiedPurchase(soap, n) soap_instantiate_ns1__qualifiedPurchase(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__qualifiedPurchase(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__qualifiedPurchase * SOAP_FMAC2 soap_instantiate_ns1__qualifiedPurchase(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__qualifiedPurchase(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__purchase
#define SOAP_TYPE_ns1__purchase (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__purchase(struct soap*, const char*, int, const ns1__purchase *, const char*);
SOAP_FMAC3 ns1__purchase * SOAP_FMAC4 soap_in_ns1__purchase(struct soap*, const char*, ns1__purchase *, const char*);

#ifndef soap_write_ns1__purchase
#define soap_write_ns1__purchase(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:purchase", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__purchase
#define soap_read_ns1__purchase(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__purchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__purchase * SOAP_FMAC4 soap_get_ns1__purchase(struct soap*, ns1__purchase *, const char*, const char*);

#define soap_new_ns1__purchase(soap, n) soap_instantiate_ns1__purchase(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__purchase(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__purchase * SOAP_FMAC2 soap_instantiate_ns1__purchase(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__purchase(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__invoice
#define SOAP_TYPE_ns1__invoice (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__invoice(struct soap*, const char*, int, const ns1__invoice *, const char*);
SOAP_FMAC3 ns1__invoice * SOAP_FMAC4 soap_in_ns1__invoice(struct soap*, const char*, ns1__invoice *, const char*);

#ifndef soap_write_ns1__invoice
#define soap_write_ns1__invoice(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:invoice", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__invoice
#define soap_read_ns1__invoice(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__invoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__invoice * SOAP_FMAC4 soap_get_ns1__invoice(struct soap*, ns1__invoice *, const char*, const char*);

#define soap_new_ns1__invoice(soap, n) soap_instantiate_ns1__invoice(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__invoice(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__invoice * SOAP_FMAC2 soap_instantiate_ns1__invoice(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__invoice(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cow
#define SOAP_TYPE_ns1__cow (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cow(struct soap*, const char*, int, const ns1__cow *, const char*);
SOAP_FMAC3 ns1__cow * SOAP_FMAC4 soap_in_ns1__cow(struct soap*, const char*, ns1__cow *, const char*);

#ifndef soap_write_ns1__cow
#define soap_write_ns1__cow(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:cow", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__cow
#define soap_read_ns1__cow(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cow(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__cow * SOAP_FMAC4 soap_get_ns1__cow(struct soap*, ns1__cow *, const char*, const char*);

#define soap_new_ns1__cow(soap, n) soap_instantiate_ns1__cow(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__cow(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__cow * SOAP_FMAC2 soap_instantiate_ns1__cow(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cow(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__company
#define SOAP_TYPE_ns1__company (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__company(struct soap*, const char*, int, const ns1__company *, const char*);
SOAP_FMAC3 ns1__company * SOAP_FMAC4 soap_in_ns1__company(struct soap*, const char*, ns1__company *, const char*);

#ifndef soap_write_ns1__company
#define soap_write_ns1__company(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:company", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__company
#define soap_read_ns1__company(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__company(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__company * SOAP_FMAC4 soap_get_ns1__company(struct soap*, ns1__company *, const char*, const char*);

#define soap_new_ns1__company(soap, n) soap_instantiate_ns1__company(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__company(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__company * SOAP_FMAC2 soap_instantiate_ns1__company(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__company(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__stock
#define SOAP_TYPE_ns1__stock (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__stock(struct soap*, const char*, int, const ns1__stock *, const char*);
SOAP_FMAC3 ns1__stock * SOAP_FMAC4 soap_in_ns1__stock(struct soap*, const char*, ns1__stock *, const char*);

#ifndef soap_write_ns1__stock
#define soap_write_ns1__stock(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:stock", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__stock
#define soap_read_ns1__stock(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__stock(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__stock * SOAP_FMAC4 soap_get_ns1__stock(struct soap*, ns1__stock *, const char*, const char*);

#define soap_new_ns1__stock(soap, n) soap_instantiate_ns1__stock(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__stock(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__stock * SOAP_FMAC2 soap_instantiate_ns1__stock(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__stock(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hent
#define SOAP_TYPE_ns1__hent (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hent(struct soap*, const char*, int, const ns1__hent *, const char*);
SOAP_FMAC3 ns1__hent * SOAP_FMAC4 soap_in_ns1__hent(struct soap*, const char*, ns1__hent *, const char*);

#ifndef soap_write_ns1__hent
#define soap_write_ns1__hent(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:hent", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__hent
#define soap_read_ns1__hent(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__hent * SOAP_FMAC4 soap_get_ns1__hent(struct soap*, ns1__hent *, const char*, const char*);

#define soap_new_ns1__hent(soap, n) soap_instantiate_ns1__hent(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__hent(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__hent * SOAP_FMAC2 soap_instantiate_ns1__hent(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hent(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__downloadPurchase
#define SOAP_TYPE___ns1__downloadPurchase (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__downloadPurchase(struct soap*, struct __ns1__downloadPurchase *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__downloadPurchase(struct soap*, const struct __ns1__downloadPurchase *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__downloadPurchase(struct soap*, const char*, int, const struct __ns1__downloadPurchase *, const char*);
SOAP_FMAC3 struct __ns1__downloadPurchase * SOAP_FMAC4 soap_in___ns1__downloadPurchase(struct soap*, const char*, struct __ns1__downloadPurchase *, const char*);

#ifndef soap_write___ns1__downloadPurchase
#define soap_write___ns1__downloadPurchase(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__downloadPurchase(soap, data), 0) || soap_put___ns1__downloadPurchase(soap, data, "-ns1:downloadPurchase", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__downloadPurchase(struct soap*, const struct __ns1__downloadPurchase *, const char*, const char*);

#ifndef soap_read___ns1__downloadPurchase
#define soap_read___ns1__downloadPurchase(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__downloadPurchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__downloadPurchase * SOAP_FMAC4 soap_get___ns1__downloadPurchase(struct soap*, struct __ns1__downloadPurchase *, const char*, const char*);

#define soap_new___ns1__downloadPurchase(soap, n) soap_instantiate___ns1__downloadPurchase(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__downloadPurchase(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__downloadPurchase * SOAP_FMAC2 soap_instantiate___ns1__downloadPurchase(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__downloadPurchase(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__fetchPurchases
#define SOAP_TYPE___ns1__fetchPurchases (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__fetchPurchases(struct soap*, struct __ns1__fetchPurchases *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__fetchPurchases(struct soap*, const struct __ns1__fetchPurchases *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__fetchPurchases(struct soap*, const char*, int, const struct __ns1__fetchPurchases *, const char*);
SOAP_FMAC3 struct __ns1__fetchPurchases * SOAP_FMAC4 soap_in___ns1__fetchPurchases(struct soap*, const char*, struct __ns1__fetchPurchases *, const char*);

#ifndef soap_write___ns1__fetchPurchases
#define soap_write___ns1__fetchPurchases(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__fetchPurchases(soap, data), 0) || soap_put___ns1__fetchPurchases(soap, data, "-ns1:fetchPurchases", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__fetchPurchases(struct soap*, const struct __ns1__fetchPurchases *, const char*, const char*);

#ifndef soap_read___ns1__fetchPurchases
#define soap_read___ns1__fetchPurchases(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__fetchPurchases(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__fetchPurchases * SOAP_FMAC4 soap_get___ns1__fetchPurchases(struct soap*, struct __ns1__fetchPurchases *, const char*, const char*);

#define soap_new___ns1__fetchPurchases(soap, n) soap_instantiate___ns1__fetchPurchases(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__fetchPurchases(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__fetchPurchases * SOAP_FMAC2 soap_instantiate___ns1__fetchPurchases(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__fetchPurchases(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__closePurchaseCursor
#define SOAP_TYPE___ns1__closePurchaseCursor (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__closePurchaseCursor(struct soap*, struct __ns1__closePurchaseCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__closePurchaseCursor(struct soap*, const struct __ns1__closePurchaseCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__closePurchaseCursor(struct soap*, const char*, int, const struct __ns1__closePurchaseCursor *, const char*);
SOAP_FMAC3 struct __ns1__closePurchaseCursor * SOAP_FMAC4 soap_in___ns1__closePurchaseCursor(struct soap*, const char*, struct __ns1__closePurchaseCursor *, const char*);

#ifndef soap_write___ns1__closePurchaseCursor
#define soap_write___ns1__closePurchaseCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__closePurchaseCursor(soap, data), 0) || soap_put___ns1__closePurchaseCursor(soap, data, "-ns1:closePurchaseCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__closePurchaseCursor(struct soap*, const struct __ns1__closePurchaseCursor *, const char*, const char*);

#ifndef soap_read___ns1__closePurchaseCursor
#define soap_read___ns1__closePurchaseCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__closePurchaseCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__closePurchaseCursor * SOAP_FMAC4 soap_get___ns1__closePurchaseCursor(struct soap*, struct __ns1__closePurchaseCursor *, const char*, const char*);

#define soap_new___ns1__closePurchaseCursor(soap, n) soap_instantiate___ns1__closePurchaseCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__closePurchaseCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__closePurchaseCursor * SOAP_FMAC2 soap_instantiate___ns1__closePurchaseCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__closePurchaseCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openPurchaseCursor
#define SOAP_TYPE___ns1__openPurchaseCursor (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openPurchaseCursor(struct soap*, struct __ns1__openPurchaseCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openPurchaseCursor(struct soap*, const struct __ns1__openPurchaseCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openPurchaseCursor(struct soap*, const char*, int, const struct __ns1__openPurchaseCursor *, const char*);
SOAP_FMAC3 struct __ns1__openPurchaseCursor * SOAP_FMAC4 soap_in___ns1__openPurchaseCursor(struct soap*, const char*, struct __ns1__openPurchaseCursor *, const char*);

#ifndef soap_write___ns1__openPurchaseCursor
#define soap_write___ns1__openPurchaseCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openPurchaseCursor(soap, data), 0) || soap_put___ns1__openPurchaseCursor(soap, data, "-ns1:openPurchaseCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openPurchaseCursor(struct soap*, const struct __ns1__openPurchaseCursor *, const char*, const char*);

#ifndef soap_read___ns1__openPurchaseCursor
#define soap_read___ns1__openPurchaseCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openPurchaseCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openPurchaseCursor * SOAP_FMAC4 soap_get___ns1__openPurchaseCursor(struct soap*, struct __ns1__openPurchaseCursor *, const char*, const char*);

#define soap_new___ns1__openPurchaseCursor(soap, n) soap_instantiate___ns1__openPurchaseCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openPurchaseCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openPurchaseCursor * SOAP_FMAC2 soap_instantiate___ns1__openPurchaseCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openPurchaseCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__uploadPurchase
#define SOAP_TYPE___ns1__uploadPurchase (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__uploadPurchase(struct soap*, struct __ns1__uploadPurchase *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__uploadPurchase(struct soap*, const struct __ns1__uploadPurchase *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__uploadPurchase(struct soap*, const char*, int, const struct __ns1__uploadPurchase *, const char*);
SOAP_FMAC3 struct __ns1__uploadPurchase * SOAP_FMAC4 soap_in___ns1__uploadPurchase(struct soap*, const char*, struct __ns1__uploadPurchase *, const char*);

#ifndef soap_write___ns1__uploadPurchase
#define soap_write___ns1__uploadPurchase(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__uploadPurchase(soap, data), 0) || soap_put___ns1__uploadPurchase(soap, data, "-ns1:uploadPurchase", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__uploadPurchase(struct soap*, const struct __ns1__uploadPurchase *, const char*, const char*);

#ifndef soap_read___ns1__uploadPurchase
#define soap_read___ns1__uploadPurchase(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__uploadPurchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__uploadPurchase * SOAP_FMAC4 soap_get___ns1__uploadPurchase(struct soap*, struct __ns1__uploadPurchase *, const char*, const char*);

#define soap_new___ns1__uploadPurchase(soap, n) soap_instantiate___ns1__uploadPurchase(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__uploadPurchase(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__uploadPurchase * SOAP_FMAC2 soap_instantiate___ns1__uploadPurchase(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__uploadPurchase(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__fetchCompany
#define SOAP_TYPE___ns1__fetchCompany (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__fetchCompany(struct soap*, struct __ns1__fetchCompany *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__fetchCompany(struct soap*, const struct __ns1__fetchCompany *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__fetchCompany(struct soap*, const char*, int, const struct __ns1__fetchCompany *, const char*);
SOAP_FMAC3 struct __ns1__fetchCompany * SOAP_FMAC4 soap_in___ns1__fetchCompany(struct soap*, const char*, struct __ns1__fetchCompany *, const char*);

#ifndef soap_write___ns1__fetchCompany
#define soap_write___ns1__fetchCompany(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__fetchCompany(soap, data), 0) || soap_put___ns1__fetchCompany(soap, data, "-ns1:fetchCompany", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__fetchCompany(struct soap*, const struct __ns1__fetchCompany *, const char*, const char*);

#ifndef soap_read___ns1__fetchCompany
#define soap_read___ns1__fetchCompany(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__fetchCompany(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__fetchCompany * SOAP_FMAC4 soap_get___ns1__fetchCompany(struct soap*, struct __ns1__fetchCompany *, const char*, const char*);

#define soap_new___ns1__fetchCompany(soap, n) soap_instantiate___ns1__fetchCompany(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__fetchCompany(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__fetchCompany * SOAP_FMAC2 soap_instantiate___ns1__fetchCompany(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__fetchCompany(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__updateCompany
#define SOAP_TYPE___ns1__updateCompany (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__updateCompany(struct soap*, struct __ns1__updateCompany *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__updateCompany(struct soap*, const struct __ns1__updateCompany *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__updateCompany(struct soap*, const char*, int, const struct __ns1__updateCompany *, const char*);
SOAP_FMAC3 struct __ns1__updateCompany * SOAP_FMAC4 soap_in___ns1__updateCompany(struct soap*, const char*, struct __ns1__updateCompany *, const char*);

#ifndef soap_write___ns1__updateCompany
#define soap_write___ns1__updateCompany(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__updateCompany(soap, data), 0) || soap_put___ns1__updateCompany(soap, data, "-ns1:updateCompany", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__updateCompany(struct soap*, const struct __ns1__updateCompany *, const char*, const char*);

#ifndef soap_read___ns1__updateCompany
#define soap_read___ns1__updateCompany(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__updateCompany(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__updateCompany * SOAP_FMAC4 soap_get___ns1__updateCompany(struct soap*, struct __ns1__updateCompany *, const char*, const char*);

#define soap_new___ns1__updateCompany(soap, n) soap_instantiate___ns1__updateCompany(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__updateCompany(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__updateCompany * SOAP_FMAC2 soap_instantiate___ns1__updateCompany(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__updateCompany(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__closeStockCursor
#define SOAP_TYPE___ns1__closeStockCursor (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__closeStockCursor(struct soap*, struct __ns1__closeStockCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__closeStockCursor(struct soap*, const struct __ns1__closeStockCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__closeStockCursor(struct soap*, const char*, int, const struct __ns1__closeStockCursor *, const char*);
SOAP_FMAC3 struct __ns1__closeStockCursor * SOAP_FMAC4 soap_in___ns1__closeStockCursor(struct soap*, const char*, struct __ns1__closeStockCursor *, const char*);

#ifndef soap_write___ns1__closeStockCursor
#define soap_write___ns1__closeStockCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__closeStockCursor(soap, data), 0) || soap_put___ns1__closeStockCursor(soap, data, "-ns1:closeStockCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__closeStockCursor(struct soap*, const struct __ns1__closeStockCursor *, const char*, const char*);

#ifndef soap_read___ns1__closeStockCursor
#define soap_read___ns1__closeStockCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__closeStockCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__closeStockCursor * SOAP_FMAC4 soap_get___ns1__closeStockCursor(struct soap*, struct __ns1__closeStockCursor *, const char*, const char*);

#define soap_new___ns1__closeStockCursor(soap, n) soap_instantiate___ns1__closeStockCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__closeStockCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__closeStockCursor * SOAP_FMAC2 soap_instantiate___ns1__closeStockCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__closeStockCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__fetchStocks
#define SOAP_TYPE___ns1__fetchStocks (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__fetchStocks(struct soap*, struct __ns1__fetchStocks *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__fetchStocks(struct soap*, const struct __ns1__fetchStocks *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__fetchStocks(struct soap*, const char*, int, const struct __ns1__fetchStocks *, const char*);
SOAP_FMAC3 struct __ns1__fetchStocks * SOAP_FMAC4 soap_in___ns1__fetchStocks(struct soap*, const char*, struct __ns1__fetchStocks *, const char*);

#ifndef soap_write___ns1__fetchStocks
#define soap_write___ns1__fetchStocks(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__fetchStocks(soap, data), 0) || soap_put___ns1__fetchStocks(soap, data, "-ns1:fetchStocks", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__fetchStocks(struct soap*, const struct __ns1__fetchStocks *, const char*, const char*);

#ifndef soap_read___ns1__fetchStocks
#define soap_read___ns1__fetchStocks(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__fetchStocks(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__fetchStocks * SOAP_FMAC4 soap_get___ns1__fetchStocks(struct soap*, struct __ns1__fetchStocks *, const char*, const char*);

#define soap_new___ns1__fetchStocks(soap, n) soap_instantiate___ns1__fetchStocks(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__fetchStocks(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__fetchStocks * SOAP_FMAC2 soap_instantiate___ns1__fetchStocks(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__fetchStocks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openStockCursor
#define SOAP_TYPE___ns1__openStockCursor (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openStockCursor(struct soap*, struct __ns1__openStockCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openStockCursor(struct soap*, const struct __ns1__openStockCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openStockCursor(struct soap*, const char*, int, const struct __ns1__openStockCursor *, const char*);
SOAP_FMAC3 struct __ns1__openStockCursor * SOAP_FMAC4 soap_in___ns1__openStockCursor(struct soap*, const char*, struct __ns1__openStockCursor *, const char*);

#ifndef soap_write___ns1__openStockCursor
#define soap_write___ns1__openStockCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openStockCursor(soap, data), 0) || soap_put___ns1__openStockCursor(soap, data, "-ns1:openStockCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openStockCursor(struct soap*, const struct __ns1__openStockCursor *, const char*, const char*);

#ifndef soap_read___ns1__openStockCursor
#define soap_read___ns1__openStockCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openStockCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openStockCursor * SOAP_FMAC4 soap_get___ns1__openStockCursor(struct soap*, struct __ns1__openStockCursor *, const char*, const char*);

#define soap_new___ns1__openStockCursor(soap, n) soap_instantiate___ns1__openStockCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openStockCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openStockCursor * SOAP_FMAC2 soap_instantiate___ns1__openStockCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openStockCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__commitSyncTransaction
#define SOAP_TYPE___ns1__commitSyncTransaction (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__commitSyncTransaction(struct soap*, struct __ns1__commitSyncTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__commitSyncTransaction(struct soap*, const struct __ns1__commitSyncTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__commitSyncTransaction(struct soap*, const char*, int, const struct __ns1__commitSyncTransaction *, const char*);
SOAP_FMAC3 struct __ns1__commitSyncTransaction * SOAP_FMAC4 soap_in___ns1__commitSyncTransaction(struct soap*, const char*, struct __ns1__commitSyncTransaction *, const char*);

#ifndef soap_write___ns1__commitSyncTransaction
#define soap_write___ns1__commitSyncTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__commitSyncTransaction(soap, data), 0) || soap_put___ns1__commitSyncTransaction(soap, data, "-ns1:commitSyncTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__commitSyncTransaction(struct soap*, const struct __ns1__commitSyncTransaction *, const char*, const char*);

#ifndef soap_read___ns1__commitSyncTransaction
#define soap_read___ns1__commitSyncTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__commitSyncTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__commitSyncTransaction * SOAP_FMAC4 soap_get___ns1__commitSyncTransaction(struct soap*, struct __ns1__commitSyncTransaction *, const char*, const char*);

#define soap_new___ns1__commitSyncTransaction(soap, n) soap_instantiate___ns1__commitSyncTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__commitSyncTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__commitSyncTransaction * SOAP_FMAC2 soap_instantiate___ns1__commitSyncTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__commitSyncTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__closeSyncTransaction
#define SOAP_TYPE___ns1__closeSyncTransaction (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__closeSyncTransaction(struct soap*, struct __ns1__closeSyncTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__closeSyncTransaction(struct soap*, const struct __ns1__closeSyncTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__closeSyncTransaction(struct soap*, const char*, int, const struct __ns1__closeSyncTransaction *, const char*);
SOAP_FMAC3 struct __ns1__closeSyncTransaction * SOAP_FMAC4 soap_in___ns1__closeSyncTransaction(struct soap*, const char*, struct __ns1__closeSyncTransaction *, const char*);

#ifndef soap_write___ns1__closeSyncTransaction
#define soap_write___ns1__closeSyncTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__closeSyncTransaction(soap, data), 0) || soap_put___ns1__closeSyncTransaction(soap, data, "-ns1:closeSyncTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__closeSyncTransaction(struct soap*, const struct __ns1__closeSyncTransaction *, const char*, const char*);

#ifndef soap_read___ns1__closeSyncTransaction
#define soap_read___ns1__closeSyncTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__closeSyncTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__closeSyncTransaction * SOAP_FMAC4 soap_get___ns1__closeSyncTransaction(struct soap*, struct __ns1__closeSyncTransaction *, const char*, const char*);

#define soap_new___ns1__closeSyncTransaction(soap, n) soap_instantiate___ns1__closeSyncTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__closeSyncTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__closeSyncTransaction * SOAP_FMAC2 soap_instantiate___ns1__closeSyncTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__closeSyncTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__updateStock
#define SOAP_TYPE___ns1__updateStock (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__updateStock(struct soap*, struct __ns1__updateStock *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__updateStock(struct soap*, const struct __ns1__updateStock *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__updateStock(struct soap*, const char*, int, const struct __ns1__updateStock *, const char*);
SOAP_FMAC3 struct __ns1__updateStock * SOAP_FMAC4 soap_in___ns1__updateStock(struct soap*, const char*, struct __ns1__updateStock *, const char*);

#ifndef soap_write___ns1__updateStock
#define soap_write___ns1__updateStock(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__updateStock(soap, data), 0) || soap_put___ns1__updateStock(soap, data, "-ns1:updateStock", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__updateStock(struct soap*, const struct __ns1__updateStock *, const char*, const char*);

#ifndef soap_read___ns1__updateStock
#define soap_read___ns1__updateStock(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__updateStock(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__updateStock * SOAP_FMAC4 soap_get___ns1__updateStock(struct soap*, struct __ns1__updateStock *, const char*, const char*);

#define soap_new___ns1__updateStock(soap, n) soap_instantiate___ns1__updateStock(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__updateStock(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__updateStock * SOAP_FMAC2 soap_instantiate___ns1__updateStock(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__updateStock(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__updateHent
#define SOAP_TYPE___ns1__updateHent (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__updateHent(struct soap*, struct __ns1__updateHent *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__updateHent(struct soap*, const struct __ns1__updateHent *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__updateHent(struct soap*, const char*, int, const struct __ns1__updateHent *, const char*);
SOAP_FMAC3 struct __ns1__updateHent * SOAP_FMAC4 soap_in___ns1__updateHent(struct soap*, const char*, struct __ns1__updateHent *, const char*);

#ifndef soap_write___ns1__updateHent
#define soap_write___ns1__updateHent(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__updateHent(soap, data), 0) || soap_put___ns1__updateHent(soap, data, "-ns1:updateHent", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__updateHent(struct soap*, const struct __ns1__updateHent *, const char*, const char*);

#ifndef soap_read___ns1__updateHent
#define soap_read___ns1__updateHent(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__updateHent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__updateHent * SOAP_FMAC4 soap_get___ns1__updateHent(struct soap*, struct __ns1__updateHent *, const char*, const char*);

#define soap_new___ns1__updateHent(soap, n) soap_instantiate___ns1__updateHent(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__updateHent(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__updateHent * SOAP_FMAC2 soap_instantiate___ns1__updateHent(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__updateHent(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openSyncTransaction
#define SOAP_TYPE___ns1__openSyncTransaction (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openSyncTransaction(struct soap*, struct __ns1__openSyncTransaction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openSyncTransaction(struct soap*, const struct __ns1__openSyncTransaction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openSyncTransaction(struct soap*, const char*, int, const struct __ns1__openSyncTransaction *, const char*);
SOAP_FMAC3 struct __ns1__openSyncTransaction * SOAP_FMAC4 soap_in___ns1__openSyncTransaction(struct soap*, const char*, struct __ns1__openSyncTransaction *, const char*);

#ifndef soap_write___ns1__openSyncTransaction
#define soap_write___ns1__openSyncTransaction(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openSyncTransaction(soap, data), 0) || soap_put___ns1__openSyncTransaction(soap, data, "-ns1:openSyncTransaction", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openSyncTransaction(struct soap*, const struct __ns1__openSyncTransaction *, const char*, const char*);

#ifndef soap_read___ns1__openSyncTransaction
#define soap_read___ns1__openSyncTransaction(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openSyncTransaction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openSyncTransaction * SOAP_FMAC4 soap_get___ns1__openSyncTransaction(struct soap*, struct __ns1__openSyncTransaction *, const char*, const char*);

#define soap_new___ns1__openSyncTransaction(soap, n) soap_instantiate___ns1__openSyncTransaction(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openSyncTransaction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openSyncTransaction * SOAP_FMAC2 soap_instantiate___ns1__openSyncTransaction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openSyncTransaction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__closeHentCursor
#define SOAP_TYPE___ns1__closeHentCursor (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__closeHentCursor(struct soap*, struct __ns1__closeHentCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__closeHentCursor(struct soap*, const struct __ns1__closeHentCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__closeHentCursor(struct soap*, const char*, int, const struct __ns1__closeHentCursor *, const char*);
SOAP_FMAC3 struct __ns1__closeHentCursor * SOAP_FMAC4 soap_in___ns1__closeHentCursor(struct soap*, const char*, struct __ns1__closeHentCursor *, const char*);

#ifndef soap_write___ns1__closeHentCursor
#define soap_write___ns1__closeHentCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__closeHentCursor(soap, data), 0) || soap_put___ns1__closeHentCursor(soap, data, "-ns1:closeHentCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__closeHentCursor(struct soap*, const struct __ns1__closeHentCursor *, const char*, const char*);

#ifndef soap_read___ns1__closeHentCursor
#define soap_read___ns1__closeHentCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__closeHentCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__closeHentCursor * SOAP_FMAC4 soap_get___ns1__closeHentCursor(struct soap*, struct __ns1__closeHentCursor *, const char*, const char*);

#define soap_new___ns1__closeHentCursor(soap, n) soap_instantiate___ns1__closeHentCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__closeHentCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__closeHentCursor * SOAP_FMAC2 soap_instantiate___ns1__closeHentCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__closeHentCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__fetchHents
#define SOAP_TYPE___ns1__fetchHents (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__fetchHents(struct soap*, struct __ns1__fetchHents *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__fetchHents(struct soap*, const struct __ns1__fetchHents *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__fetchHents(struct soap*, const char*, int, const struct __ns1__fetchHents *, const char*);
SOAP_FMAC3 struct __ns1__fetchHents * SOAP_FMAC4 soap_in___ns1__fetchHents(struct soap*, const char*, struct __ns1__fetchHents *, const char*);

#ifndef soap_write___ns1__fetchHents
#define soap_write___ns1__fetchHents(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__fetchHents(soap, data), 0) || soap_put___ns1__fetchHents(soap, data, "-ns1:fetchHents", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__fetchHents(struct soap*, const struct __ns1__fetchHents *, const char*, const char*);

#ifndef soap_read___ns1__fetchHents
#define soap_read___ns1__fetchHents(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__fetchHents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__fetchHents * SOAP_FMAC4 soap_get___ns1__fetchHents(struct soap*, struct __ns1__fetchHents *, const char*, const char*);

#define soap_new___ns1__fetchHents(soap, n) soap_instantiate___ns1__fetchHents(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__fetchHents(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__fetchHents * SOAP_FMAC2 soap_instantiate___ns1__fetchHents(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__fetchHents(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openHentCursor
#define SOAP_TYPE___ns1__openHentCursor (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openHentCursor(struct soap*, struct __ns1__openHentCursor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openHentCursor(struct soap*, const struct __ns1__openHentCursor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openHentCursor(struct soap*, const char*, int, const struct __ns1__openHentCursor *, const char*);
SOAP_FMAC3 struct __ns1__openHentCursor * SOAP_FMAC4 soap_in___ns1__openHentCursor(struct soap*, const char*, struct __ns1__openHentCursor *, const char*);

#ifndef soap_write___ns1__openHentCursor
#define soap_write___ns1__openHentCursor(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openHentCursor(soap, data), 0) || soap_put___ns1__openHentCursor(soap, data, "-ns1:openHentCursor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openHentCursor(struct soap*, const struct __ns1__openHentCursor *, const char*, const char*);

#ifndef soap_read___ns1__openHentCursor
#define soap_read___ns1__openHentCursor(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openHentCursor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openHentCursor * SOAP_FMAC4 soap_get___ns1__openHentCursor(struct soap*, struct __ns1__openHentCursor *, const char*, const char*);

#define soap_new___ns1__openHentCursor(soap, n) soap_instantiate___ns1__openHentCursor(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openHentCursor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openHentCursor * SOAP_FMAC2 soap_instantiate___ns1__openHentCursor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openHentCursor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__closeSession
#define SOAP_TYPE___ns1__closeSession (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__closeSession(struct soap*, struct __ns1__closeSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__closeSession(struct soap*, const struct __ns1__closeSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__closeSession(struct soap*, const char*, int, const struct __ns1__closeSession *, const char*);
SOAP_FMAC3 struct __ns1__closeSession * SOAP_FMAC4 soap_in___ns1__closeSession(struct soap*, const char*, struct __ns1__closeSession *, const char*);

#ifndef soap_write___ns1__closeSession
#define soap_write___ns1__closeSession(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__closeSession(soap, data), 0) || soap_put___ns1__closeSession(soap, data, "-ns1:closeSession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__closeSession(struct soap*, const struct __ns1__closeSession *, const char*, const char*);

#ifndef soap_read___ns1__closeSession
#define soap_read___ns1__closeSession(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__closeSession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__closeSession * SOAP_FMAC4 soap_get___ns1__closeSession(struct soap*, struct __ns1__closeSession *, const char*, const char*);

#define soap_new___ns1__closeSession(soap, n) soap_instantiate___ns1__closeSession(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__closeSession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__closeSession * SOAP_FMAC2 soap_instantiate___ns1__closeSession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__closeSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openOfficeSession
#define SOAP_TYPE___ns1__openOfficeSession (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openOfficeSession(struct soap*, struct __ns1__openOfficeSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openOfficeSession(struct soap*, const struct __ns1__openOfficeSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openOfficeSession(struct soap*, const char*, int, const struct __ns1__openOfficeSession *, const char*);
SOAP_FMAC3 struct __ns1__openOfficeSession * SOAP_FMAC4 soap_in___ns1__openOfficeSession(struct soap*, const char*, struct __ns1__openOfficeSession *, const char*);

#ifndef soap_write___ns1__openOfficeSession
#define soap_write___ns1__openOfficeSession(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openOfficeSession(soap, data), 0) || soap_put___ns1__openOfficeSession(soap, data, "-ns1:openOfficeSession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openOfficeSession(struct soap*, const struct __ns1__openOfficeSession *, const char*, const char*);

#ifndef soap_read___ns1__openOfficeSession
#define soap_read___ns1__openOfficeSession(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openOfficeSession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openOfficeSession * SOAP_FMAC4 soap_get___ns1__openOfficeSession(struct soap*, struct __ns1__openOfficeSession *, const char*, const char*);

#define soap_new___ns1__openOfficeSession(soap, n) soap_instantiate___ns1__openOfficeSession(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openOfficeSession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openOfficeSession * SOAP_FMAC2 soap_instantiate___ns1__openOfficeSession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openOfficeSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__openMobileSession
#define SOAP_TYPE___ns1__openMobileSession (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__openMobileSession(struct soap*, struct __ns1__openMobileSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__openMobileSession(struct soap*, const struct __ns1__openMobileSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__openMobileSession(struct soap*, const char*, int, const struct __ns1__openMobileSession *, const char*);
SOAP_FMAC3 struct __ns1__openMobileSession * SOAP_FMAC4 soap_in___ns1__openMobileSession(struct soap*, const char*, struct __ns1__openMobileSession *, const char*);

#ifndef soap_write___ns1__openMobileSession
#define soap_write___ns1__openMobileSession(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__openMobileSession(soap, data), 0) || soap_put___ns1__openMobileSession(soap, data, "-ns1:openMobileSession", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__openMobileSession(struct soap*, const struct __ns1__openMobileSession *, const char*, const char*);

#ifndef soap_read___ns1__openMobileSession
#define soap_read___ns1__openMobileSession(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__openMobileSession(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__openMobileSession * SOAP_FMAC4 soap_get___ns1__openMobileSession(struct soap*, struct __ns1__openMobileSession *, const char*, const char*);

#define soap_new___ns1__openMobileSession(soap, n) soap_instantiate___ns1__openMobileSession(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__openMobileSession(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__openMobileSession * SOAP_FMAC2 soap_instantiate___ns1__openMobileSession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__openMobileSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTons1__downloadPurchaseResponse
#define SOAP_TYPE_PointerTons1__downloadPurchaseResponse (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__downloadPurchaseResponse(struct soap*, ns1__downloadPurchaseResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__downloadPurchaseResponse(struct soap*, const char *, int, ns1__downloadPurchaseResponse *const*, const char *);
SOAP_FMAC3 ns1__downloadPurchaseResponse ** SOAP_FMAC4 soap_in_PointerTons1__downloadPurchaseResponse(struct soap*, const char*, ns1__downloadPurchaseResponse **, const char*);

#ifndef soap_write_PointerTons1__downloadPurchaseResponse
#define soap_write_PointerTons1__downloadPurchaseResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__downloadPurchaseResponse(soap, data), 0) || soap_put_PointerTons1__downloadPurchaseResponse(soap, data, "ns1:downloadPurchaseResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__downloadPurchaseResponse(struct soap*, ns1__downloadPurchaseResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__downloadPurchaseResponse
#define soap_read_PointerTons1__downloadPurchaseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__downloadPurchaseResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__downloadPurchaseResponse ** SOAP_FMAC4 soap_get_PointerTons1__downloadPurchaseResponse(struct soap*, ns1__downloadPurchaseResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__downloadPurchaseRequest
#define SOAP_TYPE_PointerTons1__downloadPurchaseRequest (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__downloadPurchaseRequest(struct soap*, ns1__downloadPurchaseRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__downloadPurchaseRequest(struct soap*, const char *, int, ns1__downloadPurchaseRequest *const*, const char *);
SOAP_FMAC3 ns1__downloadPurchaseRequest ** SOAP_FMAC4 soap_in_PointerTons1__downloadPurchaseRequest(struct soap*, const char*, ns1__downloadPurchaseRequest **, const char*);

#ifndef soap_write_PointerTons1__downloadPurchaseRequest
#define soap_write_PointerTons1__downloadPurchaseRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__downloadPurchaseRequest(soap, data), 0) || soap_put_PointerTons1__downloadPurchaseRequest(soap, data, "ns1:downloadPurchaseRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__downloadPurchaseRequest(struct soap*, ns1__downloadPurchaseRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__downloadPurchaseRequest
#define soap_read_PointerTons1__downloadPurchaseRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__downloadPurchaseRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__downloadPurchaseRequest ** SOAP_FMAC4 soap_get_PointerTons1__downloadPurchaseRequest(struct soap*, ns1__downloadPurchaseRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__fetchPurchasesResponse
#define SOAP_TYPE_PointerTons1__fetchPurchasesResponse (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__fetchPurchasesResponse(struct soap*, ns1__fetchPurchasesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__fetchPurchasesResponse(struct soap*, const char *, int, ns1__fetchPurchasesResponse *const*, const char *);
SOAP_FMAC3 ns1__fetchPurchasesResponse ** SOAP_FMAC4 soap_in_PointerTons1__fetchPurchasesResponse(struct soap*, const char*, ns1__fetchPurchasesResponse **, const char*);

#ifndef soap_write_PointerTons1__fetchPurchasesResponse
#define soap_write_PointerTons1__fetchPurchasesResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__fetchPurchasesResponse(soap, data), 0) || soap_put_PointerTons1__fetchPurchasesResponse(soap, data, "ns1:fetchPurchasesResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__fetchPurchasesResponse(struct soap*, ns1__fetchPurchasesResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__fetchPurchasesResponse
#define soap_read_PointerTons1__fetchPurchasesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__fetchPurchasesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchPurchasesResponse ** SOAP_FMAC4 soap_get_PointerTons1__fetchPurchasesResponse(struct soap*, ns1__fetchPurchasesResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__closePurchaseCursorResponse
#define SOAP_TYPE_PointerTons1__closePurchaseCursorResponse (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__closePurchaseCursorResponse(struct soap*, ns1__closePurchaseCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__closePurchaseCursorResponse(struct soap*, const char *, int, ns1__closePurchaseCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__closePurchaseCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__closePurchaseCursorResponse(struct soap*, const char*, ns1__closePurchaseCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__closePurchaseCursorResponse
#define soap_write_PointerTons1__closePurchaseCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__closePurchaseCursorResponse(soap, data), 0) || soap_put_PointerTons1__closePurchaseCursorResponse(soap, data, "ns1:closePurchaseCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__closePurchaseCursorResponse(struct soap*, ns1__closePurchaseCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__closePurchaseCursorResponse
#define soap_read_PointerTons1__closePurchaseCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__closePurchaseCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closePurchaseCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__closePurchaseCursorResponse(struct soap*, ns1__closePurchaseCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openPurchaseCursorResponse
#define SOAP_TYPE_PointerTons1__openPurchaseCursorResponse (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openPurchaseCursorResponse(struct soap*, ns1__openPurchaseCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openPurchaseCursorResponse(struct soap*, const char *, int, ns1__openPurchaseCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__openPurchaseCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__openPurchaseCursorResponse(struct soap*, const char*, ns1__openPurchaseCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__openPurchaseCursorResponse
#define soap_write_PointerTons1__openPurchaseCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openPurchaseCursorResponse(soap, data), 0) || soap_put_PointerTons1__openPurchaseCursorResponse(soap, data, "ns1:openPurchaseCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openPurchaseCursorResponse(struct soap*, ns1__openPurchaseCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openPurchaseCursorResponse
#define soap_read_PointerTons1__openPurchaseCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openPurchaseCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openPurchaseCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__openPurchaseCursorResponse(struct soap*, ns1__openPurchaseCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__uploadPurchaseResponse
#define SOAP_TYPE_PointerTons1__uploadPurchaseResponse (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__uploadPurchaseResponse(struct soap*, ns1__uploadPurchaseResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__uploadPurchaseResponse(struct soap*, const char *, int, ns1__uploadPurchaseResponse *const*, const char *);
SOAP_FMAC3 ns1__uploadPurchaseResponse ** SOAP_FMAC4 soap_in_PointerTons1__uploadPurchaseResponse(struct soap*, const char*, ns1__uploadPurchaseResponse **, const char*);

#ifndef soap_write_PointerTons1__uploadPurchaseResponse
#define soap_write_PointerTons1__uploadPurchaseResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__uploadPurchaseResponse(soap, data), 0) || soap_put_PointerTons1__uploadPurchaseResponse(soap, data, "ns1:uploadPurchaseResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__uploadPurchaseResponse(struct soap*, ns1__uploadPurchaseResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__uploadPurchaseResponse
#define soap_read_PointerTons1__uploadPurchaseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__uploadPurchaseResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__uploadPurchaseResponse ** SOAP_FMAC4 soap_get_PointerTons1__uploadPurchaseResponse(struct soap*, ns1__uploadPurchaseResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__uploadPurchaseRequest
#define SOAP_TYPE_PointerTons1__uploadPurchaseRequest (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__uploadPurchaseRequest(struct soap*, ns1__uploadPurchaseRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__uploadPurchaseRequest(struct soap*, const char *, int, ns1__uploadPurchaseRequest *const*, const char *);
SOAP_FMAC3 ns1__uploadPurchaseRequest ** SOAP_FMAC4 soap_in_PointerTons1__uploadPurchaseRequest(struct soap*, const char*, ns1__uploadPurchaseRequest **, const char*);

#ifndef soap_write_PointerTons1__uploadPurchaseRequest
#define soap_write_PointerTons1__uploadPurchaseRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__uploadPurchaseRequest(soap, data), 0) || soap_put_PointerTons1__uploadPurchaseRequest(soap, data, "ns1:uploadPurchaseRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__uploadPurchaseRequest(struct soap*, ns1__uploadPurchaseRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__uploadPurchaseRequest
#define soap_read_PointerTons1__uploadPurchaseRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__uploadPurchaseRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__uploadPurchaseRequest ** SOAP_FMAC4 soap_get_PointerTons1__uploadPurchaseRequest(struct soap*, ns1__uploadPurchaseRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__fetchCompanyResponse
#define SOAP_TYPE_PointerTons1__fetchCompanyResponse (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__fetchCompanyResponse(struct soap*, ns1__fetchCompanyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__fetchCompanyResponse(struct soap*, const char *, int, ns1__fetchCompanyResponse *const*, const char *);
SOAP_FMAC3 ns1__fetchCompanyResponse ** SOAP_FMAC4 soap_in_PointerTons1__fetchCompanyResponse(struct soap*, const char*, ns1__fetchCompanyResponse **, const char*);

#ifndef soap_write_PointerTons1__fetchCompanyResponse
#define soap_write_PointerTons1__fetchCompanyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__fetchCompanyResponse(soap, data), 0) || soap_put_PointerTons1__fetchCompanyResponse(soap, data, "ns1:fetchCompanyResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__fetchCompanyResponse(struct soap*, ns1__fetchCompanyResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__fetchCompanyResponse
#define soap_read_PointerTons1__fetchCompanyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__fetchCompanyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchCompanyResponse ** SOAP_FMAC4 soap_get_PointerTons1__fetchCompanyResponse(struct soap*, ns1__fetchCompanyResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateCompanyResponse
#define SOAP_TYPE_PointerTons1__updateCompanyResponse (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateCompanyResponse(struct soap*, ns1__updateCompanyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateCompanyResponse(struct soap*, const char *, int, ns1__updateCompanyResponse *const*, const char *);
SOAP_FMAC3 ns1__updateCompanyResponse ** SOAP_FMAC4 soap_in_PointerTons1__updateCompanyResponse(struct soap*, const char*, ns1__updateCompanyResponse **, const char*);

#ifndef soap_write_PointerTons1__updateCompanyResponse
#define soap_write_PointerTons1__updateCompanyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateCompanyResponse(soap, data), 0) || soap_put_PointerTons1__updateCompanyResponse(soap, data, "ns1:updateCompanyResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateCompanyResponse(struct soap*, ns1__updateCompanyResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateCompanyResponse
#define soap_read_PointerTons1__updateCompanyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateCompanyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateCompanyResponse ** SOAP_FMAC4 soap_get_PointerTons1__updateCompanyResponse(struct soap*, ns1__updateCompanyResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateCompanyRequest
#define SOAP_TYPE_PointerTons1__updateCompanyRequest (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateCompanyRequest(struct soap*, ns1__updateCompanyRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateCompanyRequest(struct soap*, const char *, int, ns1__updateCompanyRequest *const*, const char *);
SOAP_FMAC3 ns1__updateCompanyRequest ** SOAP_FMAC4 soap_in_PointerTons1__updateCompanyRequest(struct soap*, const char*, ns1__updateCompanyRequest **, const char*);

#ifndef soap_write_PointerTons1__updateCompanyRequest
#define soap_write_PointerTons1__updateCompanyRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateCompanyRequest(soap, data), 0) || soap_put_PointerTons1__updateCompanyRequest(soap, data, "ns1:updateCompanyRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateCompanyRequest(struct soap*, ns1__updateCompanyRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateCompanyRequest
#define soap_read_PointerTons1__updateCompanyRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateCompanyRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateCompanyRequest ** SOAP_FMAC4 soap_get_PointerTons1__updateCompanyRequest(struct soap*, ns1__updateCompanyRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__closeStockCursorResponse
#define SOAP_TYPE_PointerTons1__closeStockCursorResponse (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__closeStockCursorResponse(struct soap*, ns1__closeStockCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__closeStockCursorResponse(struct soap*, const char *, int, ns1__closeStockCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__closeStockCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__closeStockCursorResponse(struct soap*, const char*, ns1__closeStockCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__closeStockCursorResponse
#define soap_write_PointerTons1__closeStockCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__closeStockCursorResponse(soap, data), 0) || soap_put_PointerTons1__closeStockCursorResponse(soap, data, "ns1:closeStockCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__closeStockCursorResponse(struct soap*, ns1__closeStockCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__closeStockCursorResponse
#define soap_read_PointerTons1__closeStockCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__closeStockCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeStockCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__closeStockCursorResponse(struct soap*, ns1__closeStockCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__fetchStocksResponse
#define SOAP_TYPE_PointerTons1__fetchStocksResponse (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__fetchStocksResponse(struct soap*, ns1__fetchStocksResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__fetchStocksResponse(struct soap*, const char *, int, ns1__fetchStocksResponse *const*, const char *);
SOAP_FMAC3 ns1__fetchStocksResponse ** SOAP_FMAC4 soap_in_PointerTons1__fetchStocksResponse(struct soap*, const char*, ns1__fetchStocksResponse **, const char*);

#ifndef soap_write_PointerTons1__fetchStocksResponse
#define soap_write_PointerTons1__fetchStocksResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__fetchStocksResponse(soap, data), 0) || soap_put_PointerTons1__fetchStocksResponse(soap, data, "ns1:fetchStocksResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__fetchStocksResponse(struct soap*, ns1__fetchStocksResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__fetchStocksResponse
#define soap_read_PointerTons1__fetchStocksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__fetchStocksResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchStocksResponse ** SOAP_FMAC4 soap_get_PointerTons1__fetchStocksResponse(struct soap*, ns1__fetchStocksResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openStockCursorResponse
#define SOAP_TYPE_PointerTons1__openStockCursorResponse (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openStockCursorResponse(struct soap*, ns1__openStockCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openStockCursorResponse(struct soap*, const char *, int, ns1__openStockCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__openStockCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__openStockCursorResponse(struct soap*, const char*, ns1__openStockCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__openStockCursorResponse
#define soap_write_PointerTons1__openStockCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openStockCursorResponse(soap, data), 0) || soap_put_PointerTons1__openStockCursorResponse(soap, data, "ns1:openStockCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openStockCursorResponse(struct soap*, ns1__openStockCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openStockCursorResponse
#define soap_read_PointerTons1__openStockCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openStockCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openStockCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__openStockCursorResponse(struct soap*, ns1__openStockCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__commitSyncTransactionResponse
#define SOAP_TYPE_PointerTons1__commitSyncTransactionResponse (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__commitSyncTransactionResponse(struct soap*, ns1__commitSyncTransactionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__commitSyncTransactionResponse(struct soap*, const char *, int, ns1__commitSyncTransactionResponse *const*, const char *);
SOAP_FMAC3 ns1__commitSyncTransactionResponse ** SOAP_FMAC4 soap_in_PointerTons1__commitSyncTransactionResponse(struct soap*, const char*, ns1__commitSyncTransactionResponse **, const char*);

#ifndef soap_write_PointerTons1__commitSyncTransactionResponse
#define soap_write_PointerTons1__commitSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__commitSyncTransactionResponse(soap, data), 0) || soap_put_PointerTons1__commitSyncTransactionResponse(soap, data, "ns1:commitSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__commitSyncTransactionResponse(struct soap*, ns1__commitSyncTransactionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__commitSyncTransactionResponse
#define soap_read_PointerTons1__commitSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__commitSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__commitSyncTransactionResponse ** SOAP_FMAC4 soap_get_PointerTons1__commitSyncTransactionResponse(struct soap*, ns1__commitSyncTransactionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__closeSyncTransactionResponse
#define SOAP_TYPE_PointerTons1__closeSyncTransactionResponse (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__closeSyncTransactionResponse(struct soap*, ns1__closeSyncTransactionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__closeSyncTransactionResponse(struct soap*, const char *, int, ns1__closeSyncTransactionResponse *const*, const char *);
SOAP_FMAC3 ns1__closeSyncTransactionResponse ** SOAP_FMAC4 soap_in_PointerTons1__closeSyncTransactionResponse(struct soap*, const char*, ns1__closeSyncTransactionResponse **, const char*);

#ifndef soap_write_PointerTons1__closeSyncTransactionResponse
#define soap_write_PointerTons1__closeSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__closeSyncTransactionResponse(soap, data), 0) || soap_put_PointerTons1__closeSyncTransactionResponse(soap, data, "ns1:closeSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__closeSyncTransactionResponse(struct soap*, ns1__closeSyncTransactionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__closeSyncTransactionResponse
#define soap_read_PointerTons1__closeSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__closeSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeSyncTransactionResponse ** SOAP_FMAC4 soap_get_PointerTons1__closeSyncTransactionResponse(struct soap*, ns1__closeSyncTransactionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateStockResponse
#define SOAP_TYPE_PointerTons1__updateStockResponse (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateStockResponse(struct soap*, ns1__updateStockResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateStockResponse(struct soap*, const char *, int, ns1__updateStockResponse *const*, const char *);
SOAP_FMAC3 ns1__updateStockResponse ** SOAP_FMAC4 soap_in_PointerTons1__updateStockResponse(struct soap*, const char*, ns1__updateStockResponse **, const char*);

#ifndef soap_write_PointerTons1__updateStockResponse
#define soap_write_PointerTons1__updateStockResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateStockResponse(soap, data), 0) || soap_put_PointerTons1__updateStockResponse(soap, data, "ns1:updateStockResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateStockResponse(struct soap*, ns1__updateStockResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateStockResponse
#define soap_read_PointerTons1__updateStockResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateStockResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateStockResponse ** SOAP_FMAC4 soap_get_PointerTons1__updateStockResponse(struct soap*, ns1__updateStockResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateStockRequest
#define SOAP_TYPE_PointerTons1__updateStockRequest (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateStockRequest(struct soap*, ns1__updateStockRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateStockRequest(struct soap*, const char *, int, ns1__updateStockRequest *const*, const char *);
SOAP_FMAC3 ns1__updateStockRequest ** SOAP_FMAC4 soap_in_PointerTons1__updateStockRequest(struct soap*, const char*, ns1__updateStockRequest **, const char*);

#ifndef soap_write_PointerTons1__updateStockRequest
#define soap_write_PointerTons1__updateStockRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateStockRequest(soap, data), 0) || soap_put_PointerTons1__updateStockRequest(soap, data, "ns1:updateStockRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateStockRequest(struct soap*, ns1__updateStockRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateStockRequest
#define soap_read_PointerTons1__updateStockRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateStockRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateStockRequest ** SOAP_FMAC4 soap_get_PointerTons1__updateStockRequest(struct soap*, ns1__updateStockRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateHentResponse
#define SOAP_TYPE_PointerTons1__updateHentResponse (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateHentResponse(struct soap*, ns1__updateHentResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateHentResponse(struct soap*, const char *, int, ns1__updateHentResponse *const*, const char *);
SOAP_FMAC3 ns1__updateHentResponse ** SOAP_FMAC4 soap_in_PointerTons1__updateHentResponse(struct soap*, const char*, ns1__updateHentResponse **, const char*);

#ifndef soap_write_PointerTons1__updateHentResponse
#define soap_write_PointerTons1__updateHentResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateHentResponse(soap, data), 0) || soap_put_PointerTons1__updateHentResponse(soap, data, "ns1:updateHentResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateHentResponse(struct soap*, ns1__updateHentResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateHentResponse
#define soap_read_PointerTons1__updateHentResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateHentResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateHentResponse ** SOAP_FMAC4 soap_get_PointerTons1__updateHentResponse(struct soap*, ns1__updateHentResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__updateHentRequest
#define SOAP_TYPE_PointerTons1__updateHentRequest (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateHentRequest(struct soap*, ns1__updateHentRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateHentRequest(struct soap*, const char *, int, ns1__updateHentRequest *const*, const char *);
SOAP_FMAC3 ns1__updateHentRequest ** SOAP_FMAC4 soap_in_PointerTons1__updateHentRequest(struct soap*, const char*, ns1__updateHentRequest **, const char*);

#ifndef soap_write_PointerTons1__updateHentRequest
#define soap_write_PointerTons1__updateHentRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__updateHentRequest(soap, data), 0) || soap_put_PointerTons1__updateHentRequest(soap, data, "ns1:updateHentRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateHentRequest(struct soap*, ns1__updateHentRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__updateHentRequest
#define soap_read_PointerTons1__updateHentRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__updateHentRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__updateHentRequest ** SOAP_FMAC4 soap_get_PointerTons1__updateHentRequest(struct soap*, ns1__updateHentRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openSyncTransactionResponse
#define SOAP_TYPE_PointerTons1__openSyncTransactionResponse (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openSyncTransactionResponse(struct soap*, ns1__openSyncTransactionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openSyncTransactionResponse(struct soap*, const char *, int, ns1__openSyncTransactionResponse *const*, const char *);
SOAP_FMAC3 ns1__openSyncTransactionResponse ** SOAP_FMAC4 soap_in_PointerTons1__openSyncTransactionResponse(struct soap*, const char*, ns1__openSyncTransactionResponse **, const char*);

#ifndef soap_write_PointerTons1__openSyncTransactionResponse
#define soap_write_PointerTons1__openSyncTransactionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openSyncTransactionResponse(soap, data), 0) || soap_put_PointerTons1__openSyncTransactionResponse(soap, data, "ns1:openSyncTransactionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openSyncTransactionResponse(struct soap*, ns1__openSyncTransactionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openSyncTransactionResponse
#define soap_read_PointerTons1__openSyncTransactionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openSyncTransactionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openSyncTransactionResponse ** SOAP_FMAC4 soap_get_PointerTons1__openSyncTransactionResponse(struct soap*, ns1__openSyncTransactionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__closeHentCursorResponse
#define SOAP_TYPE_PointerTons1__closeHentCursorResponse (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__closeHentCursorResponse(struct soap*, ns1__closeHentCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__closeHentCursorResponse(struct soap*, const char *, int, ns1__closeHentCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__closeHentCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__closeHentCursorResponse(struct soap*, const char*, ns1__closeHentCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__closeHentCursorResponse
#define soap_write_PointerTons1__closeHentCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__closeHentCursorResponse(soap, data), 0) || soap_put_PointerTons1__closeHentCursorResponse(soap, data, "ns1:closeHentCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__closeHentCursorResponse(struct soap*, ns1__closeHentCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__closeHentCursorResponse
#define soap_read_PointerTons1__closeHentCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__closeHentCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeHentCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__closeHentCursorResponse(struct soap*, ns1__closeHentCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__fetchHentsResponse
#define SOAP_TYPE_PointerTons1__fetchHentsResponse (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__fetchHentsResponse(struct soap*, ns1__fetchHentsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__fetchHentsResponse(struct soap*, const char *, int, ns1__fetchHentsResponse *const*, const char *);
SOAP_FMAC3 ns1__fetchHentsResponse ** SOAP_FMAC4 soap_in_PointerTons1__fetchHentsResponse(struct soap*, const char*, ns1__fetchHentsResponse **, const char*);

#ifndef soap_write_PointerTons1__fetchHentsResponse
#define soap_write_PointerTons1__fetchHentsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__fetchHentsResponse(soap, data), 0) || soap_put_PointerTons1__fetchHentsResponse(soap, data, "ns1:fetchHentsResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__fetchHentsResponse(struct soap*, ns1__fetchHentsResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__fetchHentsResponse
#define soap_read_PointerTons1__fetchHentsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__fetchHentsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__fetchHentsResponse ** SOAP_FMAC4 soap_get_PointerTons1__fetchHentsResponse(struct soap*, ns1__fetchHentsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__cursorRequest
#define SOAP_TYPE_PointerTons1__cursorRequest (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cursorRequest(struct soap*, ns1__cursorRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cursorRequest(struct soap*, const char *, int, ns1__cursorRequest *const*, const char *);
SOAP_FMAC3 ns1__cursorRequest ** SOAP_FMAC4 soap_in_PointerTons1__cursorRequest(struct soap*, const char*, ns1__cursorRequest **, const char*);

#ifndef soap_write_PointerTons1__cursorRequest
#define soap_write_PointerTons1__cursorRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__cursorRequest(soap, data), 0) || soap_put_PointerTons1__cursorRequest(soap, data, "ns1:cursorRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cursorRequest(struct soap*, ns1__cursorRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__cursorRequest
#define soap_read_PointerTons1__cursorRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cursorRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__cursorRequest ** SOAP_FMAC4 soap_get_PointerTons1__cursorRequest(struct soap*, ns1__cursorRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openHentCursorResponse
#define SOAP_TYPE_PointerTons1__openHentCursorResponse (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openHentCursorResponse(struct soap*, ns1__openHentCursorResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openHentCursorResponse(struct soap*, const char *, int, ns1__openHentCursorResponse *const*, const char *);
SOAP_FMAC3 ns1__openHentCursorResponse ** SOAP_FMAC4 soap_in_PointerTons1__openHentCursorResponse(struct soap*, const char*, ns1__openHentCursorResponse **, const char*);

#ifndef soap_write_PointerTons1__openHentCursorResponse
#define soap_write_PointerTons1__openHentCursorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openHentCursorResponse(soap, data), 0) || soap_put_PointerTons1__openHentCursorResponse(soap, data, "ns1:openHentCursorResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openHentCursorResponse(struct soap*, ns1__openHentCursorResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openHentCursorResponse
#define soap_read_PointerTons1__openHentCursorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openHentCursorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openHentCursorResponse ** SOAP_FMAC4 soap_get_PointerTons1__openHentCursorResponse(struct soap*, ns1__openHentCursorResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__closeSessionResponse
#define SOAP_TYPE_PointerTons1__closeSessionResponse (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__closeSessionResponse(struct soap*, ns1__closeSessionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__closeSessionResponse(struct soap*, const char *, int, ns1__closeSessionResponse *const*, const char *);
SOAP_FMAC3 ns1__closeSessionResponse ** SOAP_FMAC4 soap_in_PointerTons1__closeSessionResponse(struct soap*, const char*, ns1__closeSessionResponse **, const char*);

#ifndef soap_write_PointerTons1__closeSessionResponse
#define soap_write_PointerTons1__closeSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__closeSessionResponse(soap, data), 0) || soap_put_PointerTons1__closeSessionResponse(soap, data, "ns1:closeSessionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__closeSessionResponse(struct soap*, ns1__closeSessionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__closeSessionResponse
#define soap_read_PointerTons1__closeSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__closeSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__closeSessionResponse ** SOAP_FMAC4 soap_get_PointerTons1__closeSessionResponse(struct soap*, ns1__closeSessionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openOfficeSessionRequest
#define SOAP_TYPE_PointerTons1__openOfficeSessionRequest (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openOfficeSessionRequest(struct soap*, ns1__openOfficeSessionRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openOfficeSessionRequest(struct soap*, const char *, int, ns1__openOfficeSessionRequest *const*, const char *);
SOAP_FMAC3 ns1__openOfficeSessionRequest ** SOAP_FMAC4 soap_in_PointerTons1__openOfficeSessionRequest(struct soap*, const char*, ns1__openOfficeSessionRequest **, const char*);

#ifndef soap_write_PointerTons1__openOfficeSessionRequest
#define soap_write_PointerTons1__openOfficeSessionRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openOfficeSessionRequest(soap, data), 0) || soap_put_PointerTons1__openOfficeSessionRequest(soap, data, "ns1:openOfficeSessionRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openOfficeSessionRequest(struct soap*, ns1__openOfficeSessionRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openOfficeSessionRequest
#define soap_read_PointerTons1__openOfficeSessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openOfficeSessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openOfficeSessionRequest ** SOAP_FMAC4 soap_get_PointerTons1__openOfficeSessionRequest(struct soap*, ns1__openOfficeSessionRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openSessionResponse
#define SOAP_TYPE_PointerTons1__openSessionResponse (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openSessionResponse(struct soap*, ns1__openSessionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openSessionResponse(struct soap*, const char *, int, ns1__openSessionResponse *const*, const char *);
SOAP_FMAC3 ns1__openSessionResponse ** SOAP_FMAC4 soap_in_PointerTons1__openSessionResponse(struct soap*, const char*, ns1__openSessionResponse **, const char*);

#ifndef soap_write_PointerTons1__openSessionResponse
#define soap_write_PointerTons1__openSessionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openSessionResponse(soap, data), 0) || soap_put_PointerTons1__openSessionResponse(soap, data, "ns1:openSessionResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openSessionResponse(struct soap*, ns1__openSessionResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openSessionResponse
#define soap_read_PointerTons1__openSessionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openSessionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openSessionResponse ** SOAP_FMAC4 soap_get_PointerTons1__openSessionResponse(struct soap*, ns1__openSessionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__openMobileSessionRequest
#define SOAP_TYPE_PointerTons1__openMobileSessionRequest (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__openMobileSessionRequest(struct soap*, ns1__openMobileSessionRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__openMobileSessionRequest(struct soap*, const char *, int, ns1__openMobileSessionRequest *const*, const char *);
SOAP_FMAC3 ns1__openMobileSessionRequest ** SOAP_FMAC4 soap_in_PointerTons1__openMobileSessionRequest(struct soap*, const char*, ns1__openMobileSessionRequest **, const char*);

#ifndef soap_write_PointerTons1__openMobileSessionRequest
#define soap_write_PointerTons1__openMobileSessionRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__openMobileSessionRequest(soap, data), 0) || soap_put_PointerTons1__openMobileSessionRequest(soap, data, "ns1:openMobileSessionRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__openMobileSessionRequest(struct soap*, ns1__openMobileSessionRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__openMobileSessionRequest
#define soap_read_PointerTons1__openMobileSessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__openMobileSessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__openMobileSessionRequest ** SOAP_FMAC4 soap_get_PointerTons1__openMobileSessionRequest(struct soap*, ns1__openMobileSessionRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__qualifiedPurchase
#define SOAP_TYPE_PointerTons1__qualifiedPurchase (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__qualifiedPurchase(struct soap*, ns1__qualifiedPurchase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__qualifiedPurchase(struct soap*, const char *, int, ns1__qualifiedPurchase *const*, const char *);
SOAP_FMAC3 ns1__qualifiedPurchase ** SOAP_FMAC4 soap_in_PointerTons1__qualifiedPurchase(struct soap*, const char*, ns1__qualifiedPurchase **, const char*);

#ifndef soap_write_PointerTons1__qualifiedPurchase
#define soap_write_PointerTons1__qualifiedPurchase(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__qualifiedPurchase(soap, data), 0) || soap_put_PointerTons1__qualifiedPurchase(soap, data, "ns1:qualifiedPurchase", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__qualifiedPurchase(struct soap*, ns1__qualifiedPurchase *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__qualifiedPurchase
#define soap_read_PointerTons1__qualifiedPurchase(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__qualifiedPurchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__qualifiedPurchase ** SOAP_FMAC4 soap_get_PointerTons1__qualifiedPurchase(struct soap*, ns1__qualifiedPurchase **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__purchase
#define SOAP_TYPE_PointerTons1__purchase (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__purchase(struct soap*, ns1__purchase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__purchase(struct soap*, const char *, int, ns1__purchase *const*, const char *);
SOAP_FMAC3 ns1__purchase ** SOAP_FMAC4 soap_in_PointerTons1__purchase(struct soap*, const char*, ns1__purchase **, const char*);

#ifndef soap_write_PointerTons1__purchase
#define soap_write_PointerTons1__purchase(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__purchase(soap, data), 0) || soap_put_PointerTons1__purchase(soap, data, "ns1:purchase", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__purchase(struct soap*, ns1__purchase *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__purchase
#define soap_read_PointerTons1__purchase(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__purchase(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__purchase ** SOAP_FMAC4 soap_get_PointerTons1__purchase(struct soap*, ns1__purchase **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__company
#define SOAP_TYPE_PointerTons1__company (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__company(struct soap*, ns1__company *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__company(struct soap*, const char *, int, ns1__company *const*, const char *);
SOAP_FMAC3 ns1__company ** SOAP_FMAC4 soap_in_PointerTons1__company(struct soap*, const char*, ns1__company **, const char*);

#ifndef soap_write_PointerTons1__company
#define soap_write_PointerTons1__company(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__company(soap, data), 0) || soap_put_PointerTons1__company(soap, data, "ns1:company", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__company(struct soap*, ns1__company *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__company
#define soap_read_PointerTons1__company(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__company(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__company ** SOAP_FMAC4 soap_get_PointerTons1__company(struct soap*, ns1__company **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__stock
#define SOAP_TYPE_PointerTons1__stock (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__stock(struct soap*, ns1__stock *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__stock(struct soap*, const char *, int, ns1__stock *const*, const char *);
SOAP_FMAC3 ns1__stock ** SOAP_FMAC4 soap_in_PointerTons1__stock(struct soap*, const char*, ns1__stock **, const char*);

#ifndef soap_write_PointerTons1__stock
#define soap_write_PointerTons1__stock(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__stock(soap, data), 0) || soap_put_PointerTons1__stock(soap, data, "ns1:stock", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__stock(struct soap*, ns1__stock *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__stock
#define soap_read_PointerTons1__stock(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__stock(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__stock ** SOAP_FMAC4 soap_get_PointerTons1__stock(struct soap*, ns1__stock **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__sessionRequest
#define SOAP_TYPE_PointerTons1__sessionRequest (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sessionRequest(struct soap*, ns1__sessionRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sessionRequest(struct soap*, const char *, int, ns1__sessionRequest *const*, const char *);
SOAP_FMAC3 ns1__sessionRequest ** SOAP_FMAC4 soap_in_PointerTons1__sessionRequest(struct soap*, const char*, ns1__sessionRequest **, const char*);

#ifndef soap_write_PointerTons1__sessionRequest
#define soap_write_PointerTons1__sessionRequest(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__sessionRequest(soap, data), 0) || soap_put_PointerTons1__sessionRequest(soap, data, "ns1:sessionRequest", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sessionRequest(struct soap*, ns1__sessionRequest *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__sessionRequest
#define soap_read_PointerTons1__sessionRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sessionRequest(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__sessionRequest ** SOAP_FMAC4 soap_get_PointerTons1__sessionRequest(struct soap*, ns1__sessionRequest **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__result
#define SOAP_TYPE_PointerTons1__result (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__result(struct soap*, ns1__result *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__result(struct soap*, const char *, int, ns1__result *const*, const char *);
SOAP_FMAC3 ns1__result ** SOAP_FMAC4 soap_in_PointerTons1__result(struct soap*, const char*, ns1__result **, const char*);

#ifndef soap_write_PointerTons1__result
#define soap_write_PointerTons1__result(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__result(soap, data), 0) || soap_put_PointerTons1__result(soap, data, "ns1:result", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__result(struct soap*, ns1__result *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__result
#define soap_read_PointerTons1__result(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__result(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__result ** SOAP_FMAC4 soap_get_PointerTons1__result(struct soap*, ns1__result **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__hent
#define SOAP_TYPE_PointerTons1__hent (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__hent(struct soap*, ns1__hent *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__hent(struct soap*, const char *, int, ns1__hent *const*, const char *);
SOAP_FMAC3 ns1__hent ** SOAP_FMAC4 soap_in_PointerTons1__hent(struct soap*, const char*, ns1__hent **, const char*);

#ifndef soap_write_PointerTons1__hent
#define soap_write_PointerTons1__hent(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__hent(soap, data), 0) || soap_put_PointerTons1__hent(soap, data, "ns1:hent", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__hent(struct soap*, ns1__hent *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__hent
#define soap_read_PointerTons1__hent(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__hent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__hent ** SOAP_FMAC4 soap_get_PointerTons1__hent(struct soap*, ns1__hent **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__invoice
#define SOAP_TYPE_PointerTons1__invoice (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__invoice(struct soap*, ns1__invoice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__invoice(struct soap*, const char *, int, ns1__invoice *const*, const char *);
SOAP_FMAC3 ns1__invoice ** SOAP_FMAC4 soap_in_PointerTons1__invoice(struct soap*, const char*, ns1__invoice **, const char*);

#ifndef soap_write_PointerTons1__invoice
#define soap_write_PointerTons1__invoice(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__invoice(soap, data), 0) || soap_put_PointerTons1__invoice(soap, data, "ns1:invoice", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__invoice(struct soap*, ns1__invoice *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__invoice
#define soap_read_PointerTons1__invoice(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__invoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__invoice ** SOAP_FMAC4 soap_get_PointerTons1__invoice(struct soap*, ns1__invoice **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__cow
#define SOAP_TYPE_PointerTons1__cow (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cow(struct soap*, ns1__cow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cow(struct soap*, const char *, int, ns1__cow *const*, const char *);
SOAP_FMAC3 ns1__cow ** SOAP_FMAC4 soap_in_PointerTons1__cow(struct soap*, const char*, ns1__cow **, const char*);

#ifndef soap_write_PointerTons1__cow
#define soap_write_PointerTons1__cow(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__cow(soap, data), 0) || soap_put_PointerTons1__cow(soap, data, "ns1:cow", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cow(struct soap*, ns1__cow *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__cow
#define soap_read_PointerTons1__cow(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cow(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__cow ** SOAP_FMAC4 soap_get_PointerTons1__cow(struct soap*, ns1__cow **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);

#ifndef soap_write_PointerTodouble
#define soap_write_PointerTodouble(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTodouble(soap, data), 0) || soap_put_PointerTodouble(soap, data, "double", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);

#ifndef soap_read_PointerTodouble
#define soap_read_PointerTodouble(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTodouble(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTotime
#define SOAP_TYPE_PointerTotime (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTotime(struct soap*, const char*, time_t **, const char*);

#ifndef soap_write_PointerTotime
#define soap_write_PointerTotime(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTotime(soap, data), 0) || soap_put_PointerTotime(soap, data, "dateTime", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotime(struct soap*, time_t *const*, const char*, const char*);

#ifndef soap_read_PointerTotime
#define soap_read_PointerTotime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotime(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTotime(struct soap*, time_t **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__qualifiedPurchase
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__qualifiedPurchase (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, std::vector<ns1__qualifiedPurchase * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, const std::vector<ns1__qualifiedPurchase * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, const char*, int, const std::vector<ns1__qualifiedPurchase * >*, const char*);
SOAP_FMAC3 std::vector<ns1__qualifiedPurchase * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, const char*, std::vector<ns1__qualifiedPurchase * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__qualifiedPurchase(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__qualifiedPurchase(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__qualifiedPurchase(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__qualifiedPurchase * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__qualifiedPurchase(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__stock
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__stock (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__stock(struct soap*, std::vector<ns1__stock * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__stock(struct soap*, const std::vector<ns1__stock * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__stock(struct soap*, const char*, int, const std::vector<ns1__stock * >*, const char*);
SOAP_FMAC3 std::vector<ns1__stock * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__stock(struct soap*, const char*, std::vector<ns1__stock * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__stock(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__stock(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__stock(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__stock * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__stock(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__stock(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__hent
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__hent (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__hent(struct soap*, std::vector<ns1__hent * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__hent(struct soap*, const std::vector<ns1__hent * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__hent(struct soap*, const char*, int, const std::vector<ns1__hent * >*, const char*);
SOAP_FMAC3 std::vector<ns1__hent * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__hent(struct soap*, const char*, std::vector<ns1__hent * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__hent(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__hent(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__hent(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__hent * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__hent(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__hent(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__invoice
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__invoice (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__invoice(struct soap*, std::vector<ns1__invoice * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__invoice(struct soap*, const std::vector<ns1__invoice * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__invoice(struct soap*, const char*, int, const std::vector<ns1__invoice * >*, const char*);
SOAP_FMAC3 std::vector<ns1__invoice * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__invoice(struct soap*, const char*, std::vector<ns1__invoice * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__invoice(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__invoice(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__invoice(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__invoice * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__invoice(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__invoice(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__cow
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__cow (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__cow(struct soap*, std::vector<ns1__cow * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__cow(struct soap*, const std::vector<ns1__cow * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__cow(struct soap*, const char*, int, const std::vector<ns1__cow * >*, const char*);
SOAP_FMAC3 std::vector<ns1__cow * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__cow(struct soap*, const char*, std::vector<ns1__cow * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTons1__cow(soap, n) soap_instantiate_std__vectorTemplateOfPointerTons1__cow(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTons1__cow(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<ns1__cow * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__cow(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__cow(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of BKRepoServiceH.h */
